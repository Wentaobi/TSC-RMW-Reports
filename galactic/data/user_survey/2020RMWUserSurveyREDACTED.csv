Timestamp,"This survey is intended specifically to understand the middleware experience for ROS 2 Foxy; but we're open to hearing about experiences with other ROS versions. For your answers to this survey, what version of ROS 2 are you using? ",Which of the following best describes your robotic application?,Which of the following transport layers does your application use?,Which of the following best describes your robot's application domain?,On a scale from 1 to 10 please rate your computer networking and debugging skills. ,We want to understand your ROS experience. How many years have you been using ROS? ,Please rate your familiarity with ROS Middleware.,Please rate your Linux debugging and development skills. ,Have you changed your default ROS 2 Foxy RMW ?,For ROS 2 Foxy what ROS middleware layer are you primarily using? ,Please answer the following questions about your *primary* RMW Implementation as specified in the previous question.   [My current RMW worked out of the box for my application.],Please answer the following questions about your *primary* RMW Implementation as specified in the previous question.   [I understand how RMWs work.],Please answer the following questions about your *primary* RMW Implementation as specified in the previous question.   [I am capable of changing my RMW easily.],Please answer the following questions about your *primary* RMW Implementation as specified in the previous question.   [I would/have considered changing my RMW implementation.],Please answer the following questions about your *primary* RMW Implementation as specified in the previous question.   [Open Robotics provides sufficient information for me to make a sound RMW selection.],Please answer the following questions about your *primary* RMW Implementation as specified in the previous question.   [My current RMW implementation provides sufficient support.],Please answer the following questions about your *primary* RMW Implementation as specified in the previous question.   [My current RMW implementation provides sufficient  documentation.],Please answer the following questions about your *primary* RMW Implementation as specified in the previous question.   [My current RMW implementation provides sufficient debugging tools.],Please answer the following questions about your *primary* RMW Implementation as specified in the previous question.   [My current RMW implementation provides sufficient features for my application.],Please answer the following questions about your *primary* RMW Implementation as specified in the previous question.   [My current RMW implementation provides sufficient performance for my application.],Please answer the following questions about your *primary* RMW Implementation as specified in the previous question.   [I am considering or have considered changing my current RMW implementation due to technical challenges.],Please answer the following questions about your *primary* RMW Implementation as specified in the previous question.   [DDS/RMWs have improved the overall ROS experience.],Please answer the following questions about your *primary* RMW Implementation as specified in the previous question.   [I would advocate for my current RMW to be the default ROS 2.],Please answer the following questions about your *primary* RMW Implementation as specified in the previous question.   [I would recommend my current RMW to a friend.],Please answer the following questions about your *primary* RMW Implementation as specified in the previous question.   [My RMW interoperates well with other systems. ],Please answer the following questions about your *primary* RMW Implementation as specified in the previous question.   [Based on the out-of-the-box experience I would recommend ROS2 Foxy to a friend.],Please answer the following questions about your *primary* RMW Implementation as specified in the previous question.   [ROS should continue to use DDS as the default RMW implementation.],"Please answer the following questions about your *primary* RMW Implementation as specified in the previous question.   [I consider my current RMW implementation robust, reliable, and ready for production.]",Please answer the following questions about your *primary* RMW Implementation as specified in the previous question.   [I consider my current RMW implementation secure.],"Please briefly describe your robotics application and and its associated network topology. This description helps us understand sub-domains where particular RMWs may have issues. In particular, specify if you had privileged/root access to the network infrastructure or not. ","Please describe your ROS RMW journey for ROS 2. If you used the default and it worked great, let us know. If you had to change RMWs please let us know why this happened and what that process was like. If you had a good or bad experience with your RMW we would to hear about it. ","How can the RMW ecosystem be improved? Are there features you require? Are there tools, documentation, or materials that would improve the ROS 2 experience?",Would you like to advocate for or against a particular default RMW to the TSC? If so please identify the RMW and why you believe it is the best choice.,Is there anything else you would like us to know or to communicate to the TSC? 
2020/09/17 6:23:18 PM MDT,Foxy,Multiple robots controlled from multiple computers,Inter process communication / all on a single machine;A hardwired Ethernet connection;A wireless network (802.11 a/b/g) that someone else controls,Medical,8,12,5,6,Yes,ADLink CycloneDDS,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Neutral,Agree,Neutral,Neutral,Agree,Strongly Agree,Strongly Disagree,Agree,Strongly Agree,Strongly Agree,Neutral,Neutral,Agree,Agree,Agree,"The system is a combined robot fleet manager and smart building infrastructure manager. A central controller interacts with remote robots through an interface layer, which hides the communication with the actual robots. The controller and this interface layer may be distributed across different computers on a wired or wireless network. The central controller also controls the smart building infrastructure, which requires using ROS connections across the wifi network to embedded devices distributed throughout the building.
The network is a mix of wired ethernet and managed wifi access points. The managed wifi blocks multicast, and often interferes with UDP in general.","We have been using Fast RTPS for two years, and during that time have had continual problems with using it on the distributed network of our environment. The biggest hurdle has been DDS's discovery mechanism, which is based on multicast UDP. This interacts poorly with the managed wifi, and as a result it is typical for different parts of our distributed system to not be able to find each other. We have recently begun resolving this problem through the use of a discovery service as an alternative to distributed discovery.

Separate from the discovery problems, we have found Fast RTPS to be generally unreliable. There are often bugs of varying severity, and the reliability of data transmission is less than necessary for a robust deployment. Bug fixes we have requested are often delivered with new bugs or unexpected behaviour included. We suspect that the makers of Fast RTPS/Fast DDS have mainly been testing it in isolation, not as part of a ROS system (which places somewhat unusual demands on the DDS infrastructure).

The final straw was the release of ROS 2 Foxy. Our system just plain failed to work on the initial release of Foxy (a LTS release). Investigation determined the cause to be the completely broken support for services in Fast DDS, the default RMW for Foxy. This took several days to track down. When we found that Fast DDS was the cause, we tried switching to Cyclone DDS. The system worked the first time we tried, with no configuration other than setting the RMW middleware environment variable. Due to this, we are now planning to switch our main deployment to Cyclone DDS, and use Cyclone DDS for future deployments.","A tool that makes it easy for a user to benchmark the different RMW implementations in their network infrastructure, including distributed nodes, and understand which RMW is best for their environment would ease the selection process for users who are not network engineers.",,
2020/09/17 7:05:58 PM MDT,Foxy,Multiple robots controlled from multiple computers,"Inter process communication / all on a single machine;A wireless network (802.11 a/b/g) that someone else controls;4G LTE / 5G  / Telecom;Embedded communications (serial, I2C, USB, etc)",Corporate R&D,6,6,4,4,Yes,ADLink CycloneDDS,Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Disagree,Neutral,Strongly Disagree,Disagree,Agree,Agree,Strongly Agree,Disagree,Agree,Agree,NO OPINION / NOT APPLICABLE,Strongly Agree,NO OPINION / NOT APPLICABLE,Agree,NO OPINION / NOT APPLICABLE,"Individual robot agents in a common space. They share essentially no information directly, except through a cloud connection where a central cloud operator collects and distributes data. Robots have LTE backup connection to be used when off Wifi for sufficiently long and only for critical data for operations centers. Robots have embedded boards without ROS onboard used for low-level control, charging, LEDs, etc. This is communicated over UDP. ","I see frequent crashes of Rviz in use and switched to Cyclone to remove those issues. I'd also be fine considering a non-DDS RMW layer. Changing the parameter for RMW is easy, but if you change it in a terminal, you cannot build your colcon workspace in the same terminal or you get a ton of esoteric errors. I have to make sure to have multiple sessions open for building, running, and debugging. ","Better Wifi support, focus on no errors / warnings (occasionally warnings from RMW, RCL, etc will flood the screen at what seems like 1+kHz washing out all my logs), better documentation focused at roboticists and not networking experts. Preconfigured profiles for common needs I can copy/paste and use (e.g. DDS config xml files for common non-default supported needs just available for use or to build off of). Official docs about ""if you have XYZ application, the best RMW is XYZ with XYZ configuration file"". I don't want to have to ask people I work with to have to go through expensive and time consuming benchmarks to find out things known by others. Officially documented issues with RMW/DDS vendors rather than hiding them for users to find accidentally.   ",,"In the document for RMW selection, I would consider removing the ""testimonials"" section. I don't think anecdotal experiences are terribly representative, if some are pressuring people to give testimonials in order to boost their perceived value. I think testimonials should only be considered if accompanied by specific and measurable metrics they took based on their own needs in order to come to that decision. "
2020/09/17 8:07:13 PM MDT,Foxy,One robot controlled from with second remote computer as a terminal.,Inter process communication / all on a single machine;A hardwired Ethernet connection;A wireless network (802.11 a/b/g) that you control.,Education,8,1,4,5,Yes,ADLink CycloneDDS,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Neutral,Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Used in education domain and controlled by WiFi.,Cyclone DDS has better performance and less problems in my experience.,Some debug tools is not as sufficient as ROS1.,Of cource rmw_cyclonedds_cpp.,None.
2020/09/17 8:07:24 PM MDT,Foxy,One robot controlled from with second remote computer as a terminal.,A wireless network (802.11 a/b/g) that you control.,Academic Research,8,2,3,5,Yes,ADLink CycloneDDS,Agree,Agree,Strongly Agree,Disagree,Disagree,Neutral,Neutral,Neutral,Neutral,Agree,Strongly Disagree,Neutral,Strongly Agree,Strongly Agree,Neutral,Agree,Neutral,Agree,Agree,I can setup a WiFi router by myself to share the wireless for my robot. My application is to integrate some Vision AI along with ROS2 navigation stack.,"I have bad experience in node discovery when using FastRTPS, but it goes well after changing to CycloneDDS. But the default settings of CycloneDDS is not good for big packets transmission like 3D point clouds, so I have to change the default configuration of CycloneDDS.",,,
2020/09/18 12:20:08 AM MDT,Foxy,Multiple robots controlled from multiple computers,"Inter process communication / all on a single machine;A hardwired Ethernet connection;A wireless network (802.11 a/b/g) that someone else controls;Embedded communications (serial, I2C, USB, etc)",Corporate R&D,8,4,3,5,Yes,ADLink CycloneDDS,Agree,Agree,Strongly Agree,Agree,Agree,Agree,Agree,Agree,Agree,Agree,Disagree,Neutral,Agree,Strongly Agree,Agree,Agree,Neutral,Neutral,Neutral,"Multi-device integration with doors, lifts, mobile vehicles, robotic arms. I had root access to the network infrastructure, which was very helpful but cannot be expected in deployment.","We used to use Fast-DDS, which worked well for single LAN setups but encountered issues on multi-LAN setups. Multiple issues were found in the process of debugging and the process of trying to run demonstrations / development using it was challenging. This was on Eloquent.  We have since moved to Foxy + CycloneDDS and the issues have been resolved on CycloneDDS.","So far my uses for RMW has been very transparent, so the most documentation so far has been to correctly write the corresponding configuration XML files with their expected behavior. It might also be helpful to specify the current DDS implementation being used when nodes are launched, in order to minimize configuration errors.",So far I have tested Fast-DDS on Eloquent and CycloneDDS on Foxy. It might be unfair to compare the two on an equal basis but CycloneDDS has had less problems so far.,Keep up the good work!
2020/09/18 2:55:48 AM MDT,Foxy,One robot with multiple onboard computers,Inter process communication / all on a single machine;A hardwired Ethernet connection;A wireless network (802.11 a/b/g) that you control.;A wireless network (802.11 a/b/g) that someone else controls,Academic Research,9,7,5,6,Yes,eProsima FastDDS (Foxy default),Strongly Agree,Strongly Agree,Strongly Agree,Neutral,Strongly Agree,Agree,Neutral,Neutral,Agree,Agree,Neutral,Strongly Agree,Agree,Neutral,Agree,Strongly Agree,Strongly Agree,Agree,Agree,I work with Navigation2 and ROS2 Planning System to carry out behaviors in environments like RoboCup@Home,"Last year I had to change to Opensplice for 4K images, but I think this is now working in FastDDS. I had not to change to Cyclone for Nav2, as many people say. ","I would like that RMW to expose some features as delivery in order, for example. I consider it critical to remove QoS specifications in subscribers. It should adapt to the QoS of the publisher.",No. ,Go ROS!!!
2020/09/18 4:32:59 AM MDT,Eloquent,Multiple robots controlled from multiple computers,Inter process communication / all on a single machine;A wireless network (802.11 a/b/g) that you control.,Academic Research,7,1,4,6,No,eProsima FastDDS (Foxy default),Strongly Agree,Agree,Strongly Disagree,Strongly Disagree,NO OPINION / NOT APPLICABLE,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Disagree,Strongly Agree,Agree,NO OPINION / NOT APPLICABLE,NO OPINION / NOT APPLICABLE,NO OPINION / NOT APPLICABLE,NO OPINION / NOT APPLICABLE,Agree,NO OPINION / NOT APPLICABLE,Multiple drones with onboard computers communicating with a ground station computer.  Total control over wireless comms.,Used default.  Works well for our project. Not tried any alternatives.,No problems so far so not an issue.,No opinion.,No.
2020/09/18 2:02:21 PM MDT,Foxy,One robot controlled from with second remote computer as a terminal.,"Inter process communication / all on a single machine;A wireless network (802.11 a/b/g) that you control.;Embedded communications (serial, I2C, USB, etc)",Industrial,7,1,4,5,Yes,ADLink CycloneDDS,Strongly Agree,Agree,Strongly Agree,Strongly Agree,Disagree,Agree,Agree,Neutral,Agree,Strongly Agree,Strongly Agree,Neutral,Strongly Agree,Strongly Agree,Neutral,Neutral,Neutral,Strongly Agree,Agree,Single robot on a shared wifi network operated by a remote terminal over wifi. I have full access to the infrastructure.,"I started with FastRTPS, did a summary analysis of others. OpenSplice and FastRTPS had serious technical issues. OpenSplice provided technical support but were unable to fix the technical issues, ultimately encouraging me to try Cyclone DDS. FastRTPS failed to acknowledge the problem for a long time but ultimately fixed the issue. CycloneDDS provided the best experience out of the box. Here's my experience: https://blog.roverrobotics.com/navigation2-now-were-getting-somewhere/","EXPECTATIONS. It's very hard to understand how a package is supposed to work when you've never used it, or to make an educated decision between different packages without significant time investment.

I wish there were more apples-to-apples comparisons of RMWs. And examples of HOW to configure RMWs (esp. Fast DDS and Cyclone DDS, both of which provide lots of configurability but little documentation on getting started.)","Yes, I think CycloneDDS has been very strong out of the gate and very responsive.",
2020/09/18 2:40:50 PM MDT,Foxy,One robot controlled from with second remote computer as a terminal.,"A hardwired Ethernet connection;A wireless network (802.11 a/b/g) that you control.;Embedded communications (serial, I2C, USB, etc)",Autonomy / Vehicle,10,6,3,6,Yes,ADLink CycloneDDS,Agree,Agree,Strongly Agree,Strongly Agree,Neutral,Agree,Strongly Agree,Agree,Strongly Agree,Strongly Agree,Agree,Disagree,Agree,Agree,Agree,Agree,Neutral,Agree,NO OPINION / NOT APPLICABLE,"My robot has a single computer (Intel NUC) that is behind a wireless router.  I have a laptop that is used for controlling the robot, and it can connect to the computer by plugged into its local network, through a VPN over its router from an external network, or wirelessly.","I used the default (FastRTPS) for a while, but found it to be very slow at initially starting up and discovering topics and nodes.  I had terrible problems with losing packets over wireless connections, and I was not able to get it to communicate using unicast UDP or TCP at all, which I need in order for it to connect to a client that is connected over a VPN since my VPN does not transmit multicast packets.

I evaluated replacing it with RTI Connext, OpenSplice, and Cyclone.  Due to licensing I decided to not use RTI.  OpenSplice and Cyclone both immediately performed much better than FastRTPS in terms of startup time and supporting different network configurations, but I found configuring and debugging Cyclone to be a little easier, so I have stuck with that.  It still has some packet loss issues over a wireless connection, and I have not been able to get unicast TCP communication to work, but otherwise it's good enough to suit my needs.

I started with Dashing and upgraded to Eloquent while I was in the middle of this and had similar experiences with both.  I've stuck with Cyclone after upgrading to Foxy, and it's still working fine, so I have not gone back to tests any other RMWs on Foxy.","Being able to communicate without using multicast is a must for me, and so it would be great to have documented examples on how to do that.  ","My vote would be for Cyclone.  I found it to be better than FastRTPS in every way; better documentation, easier to debug, better performance, easier to configure.  OpenSplice is probably also fine, I just have less experience with it at this point.","So far, I honestly have not personally seen any benefit from using a modular RMW system compared to ROS1's communication layer.  It took quite a bit of tweaking for me to get my ROS2 system working close to reliably as it was under ROS1, and it's still not great over wireless connections."
2020/09/19 8:22:01 AM MDT,Eloquent,One robot controlled from with second remote computer as a terminal.,"Inter process communication / all on a single machine;A hardwired Ethernet connection;A wireless network (802.11 a/b/g) that you control.;4G LTE / 5G  / Telecom;Embedded communications (serial, I2C, USB, etc);2.4 GHz radio controlled remote","quadrupedal robot. defense, research, surveillance, security, applications",8,11,3,6,Yes,ADLink CycloneDDS,Strongly Agree,Agree,Strongly Agree,Neutral,Disagree,Strongly Agree,Agree,Disagree,Strongly Agree,Agree,Agree,Neutral,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,"We have complete control in our robot's network.

The robot runs on a Xavier board, and connects to an embedded radio via ethernet. This radio has a few want ports, sim card support, and lots of other goodies. The main board (basically a beefy arduino) connects to the Xavier through the radio, and communicates via mavlink.

Mavlink is ingested on the Xavier allowing ROS / ROS 2 controls (our primary way to drive the robots).","I changed to use cyclone for my prior company due to horribly inconsistent performance on the nightly builds for windows (circa eloquent release). The cyclone builds were, however, quite stable and reduced CPU usage by a factor of 5 (and gave quite a bit more fps in RViz).

We use cyclone at Ghost because I'm confident that, if we hit an issue, I have absolutely no doubt in my mind that Joe, Erik and the rest of the team have got our back. They're super easy to talk to, and show more passion than anybody I've seen about their middleware.","My biggest complaint is that the middlewares seem to be too focused on benchmarks as opposed to feature sets. It would be great to have more middlewares focused on specific areas, like how iceoryx is just shared memory. It would be great to have a chart comparing and contrasting the middlewares (or a table with checkboxes). There's quite a few to compare at this point (which is great), but I personally would like open robotics to provide an unbiased comparison of all features displayed in a single spot.

I should know or have a place to look at when I consider changing middlewares for a specific application.","100% absolutely CycloneDDS. It's free and open source, super open to feedback, and genuinely the most stable middleware (in my experience).","I think ros 2 launch needs to be improved significantly, and or documented quite a bit better. It feels hacky and is hard to debug for both python and xml.

Specifically, the python launch arguments are quite frustrating in practice. Worse than ROS in that regard, which is disappointing. I think this is quite a turn-off for a lot of people when they are porting their stack over."
2020/09/19 11:18:06 PM MDT,Foxy,Multiple robots controlled from multiple computers,"Inter process communication / all on a single machine;A hardwired Ethernet connection;A wireless network (802.11 a/b/g) that you control.;A wireless network (802.11 a/b/g) that someone else controls;Embedded communications (serial, I2C, USB, etc)",Corporate R&D,10,1,4,6,Yes,ADLink CycloneDDS,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Disagree,Disagree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Disagree,Neutral,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Swarm AMR with FMS are clients in star topology Wi-Fi and I control the network.,I ran 4 Navigation2 AMR in the same ROS domian. Only rmw cyclonedds can work. But the network usage reachs the throughput limit. My AP is 802.11ac wave2 with HT160 and clients are using intel ac9260 (1733Mbps). I think based on DDS. ROS2 need to have a topic filter to send out the topics you really want to transfer over the physical network interface and others use interprocess communication.,"https://discourse.ros.org/t/rmw-proposal-content-filtered-topic-suport/16113

ROS2 need to have a topic filter to send out the topics you really want to transfer over the physical network interface and others use interprocess communication.",Cyclonedds is the best. Only cycloneDDS can remote use rviz2 over Wi-Fi to control the AMR doing navigation with Navigation2.,https://discourse.ros.org/t/rmw-proposal-content-filtered-topic-suport/16113
2020/09/21 2:57:33 AM MDT,Foxy,Multiple robots controlled by a single computer,Inter process communication / all on a single machine;A wireless network (802.11 a/b/g) that you control.;4G LTE / 5G  / Telecom,Industrial,7,5,3,5,No,eProsima FastDDS (Foxy default),Agree,Agree,Strongly Disagree,Strongly Agree,Disagree,Agree,Agree,Disagree,Strongly Disagree,Strongly Disagree,Strongly Agree,Strongly Disagree,NO OPINION / NOT APPLICABLE,NO OPINION / NOT APPLICABLE,NO OPINION / NOT APPLICABLE,Strongly Agree,Disagree,Agree,Neutral,The robots are either connected to the corporate WiFi or making an Access Point per robot,"We have problems using ROS2 due to limitations when using high amount of data. Our prototypes have 8 cameras for SLAM & collision avoidance, which is about 8Gb/s of data.
We would probably fully switch if the API provides ""intra-process only"" with custom types & no serialization nor copy.

We also could not use MicroROS because it was enforcing the embedded team to use a custom RTOS (MicroROS's one) and full ROS2 installation. The would mean we have to recreate our full application from scratch, making it impossible to advocate to the management.",,,
2020/09/21 9:53:17 AM MDT,Foxy,One robot powered with a single computer,Inter process communication / all on a single machine;A hardwired Ethernet connection;CAN,Logistics / Fullfillment,8,10,4,6,Yes,ADLink CycloneDDS,Neutral,Strongly Agree,Strongly Agree,NO OPINION / NOT APPLICABLE,Neutral,Agree,Agree,Agree,Agree,Disagree,Neutral,Disagree,Strongly Agree,Strongly Agree,Neutral,Agree,Agree,Agree,Neutral,LiDAR point cloud processing,Fast (not great performance). Cyclone (good performance). Looking toward Cyclone + Iceroyx (want 0-copy transport w/o having to use components),No opinion.,Cyclone. Performance is good. Tuning is easy. Support is great and responsive.,N/A
2020/09/22 2:48:35 AM MDT,Foxy,Multiple robots controlled from multiple computers,A wireless network (802.11 a/b/g) that you control.;A wireless network (802.11 a/b/g) that someone else controls,Logistics / Fullfillment,5,3,2,5,No,eProsima FastDDS (Foxy default),Disagree,Neutral,Disagree,Agree,Disagree,Disagree,Agree,Disagree,Neutral,Neutral,Disagree,Neutral,Neutral,Neutral,Neutral,Neutral,Neutral,Disagree,Disagree,"Using mulriple robots on a network. We had to setup our own network with no wifi to get them going, because the other commonly used network was too unreliable. Now having issues with the network crashing when 2 robots are used at the same time.","Im looking forward to learning more on the ins and outs of it, but its not a priority because we are not sure how much time it will take",Make a ros like tutorial that describes step by step what a full config file does - aimed at people who know nothing i.e. for dummies,,
2020/09/22 1:47:49 PM MDT,Foxy,One robot controlled from with second remote computer as a terminal.,"Inter process communication / all on a single machine;A hardwired Ethernet connection;A wireless network (802.11 a/b/g) that you control.;Embedded communications (serial, I2C, USB, etc)",Agriculture,7,3,2,5,No,eProsima FastDDS (Foxy default),Strongly Disagree,Agree,Agree,Agree,Disagree,NO OPINION / NOT APPLICABLE,Disagree,Disagree,Neutral,Strongly Disagree,Strongly Agree,Strongly Disagree,NO OPINION / NOT APPLICABLE,NO OPINION / NOT APPLICABLE,NO OPINION / NOT APPLICABLE,Disagree,NO OPINION / NOT APPLICABLE,Disagree,NO OPINION / NOT APPLICABLE,"Mobile robot with 1 computer controlling it and a stationary computer for monitoring / configuring purposes.
There's a WiFi router that is setup specifically for the mobile robot to connect to. The stationary computer is connected to the router using ethernet.
The mobile robot never goes further than approximately 20 meters from the access point, the wireless connection is never lost due to range and anything from transferring logs, downloading updates or ssh works smoothly on the mobile robot.","Switching from melodic to eloquent, I used FastRTPS from the start. I assumed that the default RMW would be the choice with best robustness, performance and support.
In the setup described above, melodic was working fine. When I started playing around with eloquent, even in the average office setup I found it challenging to get communication between 2 computers to work every time.
After some time  of fiddling with different configurations of DEFAULT_FASTRTPS_PROFILES.xml and the ROS_DOMAIN_ID, I got it to work most of the time. Still occasionally I ran into issues that I found very hard to debug and most were resolved with a reboot or even a simple restart of the node.","If there can't be a single RMW for all situations, at least describe the advantages of the different options.
On another note: the current setup of development of the RMW layer by different groups / companies feels as if the RMW is not considered a core functionality of 'ROS'. Looking for documentation or help on how to configure the RMW then becomes an awkward experience, as I had to tie bits and pieces read from ROS Answers, the FastRTPS documentation and some github issues together, to get a grip on how to make it perform better.","No, because I don't have experience yet with anything else than FastRTPS.",
2020/09/23 3:40:08 AM MDT,Dashing,One robot with multiple onboard computers,"Inter process communication / all on a single machine;A hardwired Ethernet connection;A wireless network (802.11 a/b/g) that you control.;4G LTE / 5G  / Telecom;Embedded communications (serial, I2C, USB, etc)",Industrial,8,8,5,5,Yes,ADLink CycloneDDS,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,NO OPINION / NOT APPLICABLE,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Neutral,Strongly Agree,Strongly Agree,"I'm using ROS 2 on different devices, self driving vehicles and embedded devices. In both scenarios FastRTPS was unstable and not easy to work with, I've since switched to CycloneDDS for the most part, their dev team is much more responsive, knowledgeable. CycloneDDS itself is fast, stable and has much better documentation.",,"More debugging tools that didn't require ROS 2 would be nice, it'd help with integrating ROS 2 with legacy systems",I strongly advocate for CycloneDDS becoming the default RMW in future ROS 2 releases instead of FastRTPS. FastRTPS' performance is unstable and its codebase is hard to work with.,
2020/09/23 9:09:22 AM MDT,Foxy,One robot controlled from with second remote computer as a terminal.,A wireless network (802.11 a/b/g) that you control.,Logistics / Fullfillment,3,8,3,4,No,eProsima FastDDS (Foxy default),Strongly Disagree,Neutral,Agree,Agree,Disagree,NO OPINION / NOT APPLICABLE,NO OPINION / NOT APPLICABLE,Strongly Disagree,Agree,Strongly Disagree,Strongly Agree,Strongly Disagree,NO OPINION / NOT APPLICABLE,Disagree,NO OPINION / NOT APPLICABLE,Disagree,NO OPINION / NOT APPLICABLE,Strongly Disagree,NO OPINION / NOT APPLICABLE,"Laptop with laser scanner on mobile robot, workstation with wifi-dongle in the same network to visualize and debug. Without a subscriber on the WS, 30Hz from the scanner, after adding a remote subscriber, local framerate (on the laptop!) went to 10Hz, Workstation got bursts of messages every 5seconds. Problem was fixed by using a different Wifi that is connected to the lan. (Laptop->Wifi-Router->Lan->workstation). It looks like a hardware issue in this instance ",,,,
2020/09/23 9:37:59 AM MDT,Foxy,One robot with multiple onboard computers,Inter process communication / all on a single machine;A hardwired Ethernet connection;A wireless network (802.11 a/b/g) that you control.;OPC UA over the ethernet connection,Logistics / Fullfillment,5,4,3,4,Yes,eProsima FastDDS (Foxy default),Agree,Neutral,Strongly Agree,Agree,Disagree,NO OPINION / NOT APPLICABLE,NO OPINION / NOT APPLICABLE,NO OPINION / NOT APPLICABLE,Agree,Neutral,Disagree,Agree,NO OPINION / NOT APPLICABLE,NO OPINION / NOT APPLICABLE,Agree,Neutral,Agree,Disagree,NO OPINION / NOT APPLICABLE,On our robots we use a PC and a PLC that are connected using Ethernet. The PC is also connected to a fleetmanager using WiFi. The fleetmanager contains a ROS node that sends commands to the individual robots.,"We did not do performance tests yet. The default (Fast RTPS) works for the things we are testing right now. As we know the group that is working both on OpenSplice and Eclipse Cyclone, we received some suggestions that we should take a look at Cyclone :)","I think good tools to debug communication problems would be really nice. Personally, I did not dive into the different QoS settings yet. For me it is new to tweak such things, so I need some time to get used to it. Moreover, I thought that ROS 2 always used DDS as RMW as described on: https://design.ros2.org/articles/ros_middleware_interface.html  But the questions suggest that is also possible to use a completely different implementation of RMW. I was not really aware of that.","I like the community approach of Eclipse Cyclone DDS. Installation of Cyclone was easy. It works for our application. However, FastRTPS also worked.",
2020/09/23 9:42:03 AM MDT,Eloquent,One robot controlled from with second remote computer as a terminal.,Inter process communication / all on a single machine;A wireless network (802.11 a/b/g) that someone else controls,Autonomy / Vehicle,8,2,3,6,No,eProsima FastDDS (Foxy default),Strongly Agree,Agree,Disagree,Agree,Agree,Agree,Agree,Disagree,Agree,Agree,Disagree,Neutral,Neutral,Agree,Agree,NO OPINION / NOT APPLICABLE,Neutral,Agree,Neutral,"A single-computer robot, but we want to connect to it over wifi. This wifi has been proven to be difficult, mostly regarding discovery. Also the default that all default ros2 commandos use a reliable connection does not help.

 Currently we do have access to the network infrastructure, but this will not always be the case.","We tried opensplice in the beginning, because it was already used at our company and in other parts. Because it contained some bugs we stuck to the default (fastrtps) which is working mostly fine (except for wifi)","Since it's really hidden behind a tick layer of RCL, I don't really care about the middle ware. It should Just Work.",,"Performance of the RMW is not an issue since the RCL/RCLCPP layer has a bigger performance penalty then any RMW. Which should totally not be the case imho! (I know about the static executor in Foxy, but I see that as a bandaid, not a proper fix.)

Better wifi support would be nice, but I didn't check foxy yet."
2020/09/23 10:17:43 AM MDT,Foxy,Multiple robots controlled from multiple computers,Inter process communication / all on a single machine;A wireless network (802.11 a/b/g) that you control.,Agriculture,10,6,5,6,No,eProsima FastDDS (Foxy default),Strongly Agree,Strongly Agree,Strongly Agree,Strongly Disagree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Agree,Strongly Disagree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Neutral,multi robot system for autonomous snow removal at airports.  A fleet of robotically controlled snow plows that clean airport runways.   A leader vehicle the monitors several robots in formation,We use it out of the box and we created our own QT application that could run on an iPad using Fast DDS.  That part was a challenge to get working with ROS but it works great now.  ,I would like to see the ability to create domains and other technics that can easily allow multi-robot systems to interact.  Right now having all topics exposed on the network is not good,Fast DDS is fine.  What I am concerned about is that we will switch to a new DDS vendor due to politics and not technical requirements.  I have heard the argument that why would you want your DDS stack to be controlled by a commercial company?  My rebuttal is that if we use Eclipse DDS then who is pushing for this?  A company? Why is that?  The switching of default RMW feels political and coming from a commercial agenda.  ,keep politics and hidden corporate agendas out of this decision.
2020/09/23 3:28:39 PM MDT,Eloquent,Stereo Vision Sensor,Inter process communication / all on a single machine,Hardware Develpoment,9,10,5,5,Yes,eProsima FastDDS (Foxy default),Strongly Agree,Strongly Agree,Strongly Agree,Agree,Agree,Strongly Agree,Agree,Agree,Agree,Agree,Neutral,Strongly Agree,Agree,Agree,Neutral,Neutral,Strongly Agree,Agree,Neutral,Stereo Vision hw driver ,Using default,I'd like to be able to get info about QoS of running topics ,No,Nothing
2020/09/25 4:24:33 AM MDT,Foxy,One robot powered with a single computer,Inter process communication / all on a single machine,Consumer Robotics,6,5,4,6,Yes,eProsima FastDDS (Foxy default),Agree,Agree,Agree,Agree,Strongly Disagree,Agree,Agree,Neutral,Agree,Disagree,Strongly Disagree,Neutral,Neutral,Agree,Neutral,Agree,Strongly Agree,Neutral,Neutral,"My robotic application runs on a raspberry pi where there are a small number of processes.
ROS communication is used for intra-process comm and inter-process comm within the machine for normal operations.
ROS communication is used for debugging purposes between the robot and a remote computer over wifi.","Started with default FastRTPS, due to bad performance (in Bouncy/Crystal) tested all available middlewares and focused on CycloneDDS.
Since beginning of the year the performance of FastRTPS are now similar to CycloneDDS so currently back to FastRTPS as it's a more mature codebase.","ROS 2 ecosystem treats the RMW and underlying middleware as a black box, even though most of the computational resource usage comes from it and its interaction with the ROS client library.

It's not possible to build a ROS 2 application that is something more than a prototype without having to look into the RMW/DDS and often tweaking it, so ROS should acknowledge that.
ROS should not rely on the tools and documentations of DDS providers, at least for the tier 1 implementations.
ROS client library should expose APIs to interact with the DDS.",No,"The RMW/DDS is a crucial piece of software in a ROS 2 application.
The TSC should monitor its quality level (at least for default DDS, if possible also for other tier 1) to make sure that is usable in production applications.
This includes code quality, test coverage, features integration process."
2020/09/28 7:21:21 AM MDT,Foxy,One robot powered with a single computer,"Inter process communication / all on a single machine;A hardwired Ethernet connection;Embedded communications (serial, I2C, USB, etc)",Industrial,7,7,3,5,Yes,ADLink CycloneDDS,Agree,Agree,Agree,Strongly Disagree,Disagree,Neutral,Neutral,Neutral,Disagree,Agree,Disagree,Agree,Strongly Agree,Strongly Agree,Neutral,Agree,Agree,Neutral,Neutral,,,,Cyclone,
2020/09/30 4:56:35 AM MDT,Eloquent,One robot with multiple onboard computers,A hardwired Ethernet connection,Autonomy / Vehicle,7,6,5,4,No,eProsima FastDDS (Foxy default),Strongly Disagree,Neutral,Agree,Strongly Agree,Disagree,Disagree,Disagree,Disagree,Strongly Disagree,Strongly Disagree,Strongly Agree,NO OPINION / NOT APPLICABLE,NO OPINION / NOT APPLICABLE,Neutral,Strongly Disagree,Strongly Disagree,NO OPINION / NOT APPLICABLE,Strongly Disagree,NO OPINION / NOT APPLICABLE,"The application features a central server-class PC with several high-bandwidth sensors connected to it (450 MB/s on 10GigE, 2x 250 MB/s, additional ethernet with smaller load) and a distributed network of additional sensors on their own computers, providing data to the central server. There is also a data logger as a standalone system within the network.

The central server and the sensors connected to it are using ROS1, ROS2 is only used for the data exchange with the distributed computers / data loggers.","On the central server itself, DDS/ROS2 worked out of the box so far.

HOWEVER:
When using the ros1 bridge and bridging image topics to the local ROS2 system, the DDS bandwidth limitations had a feedback to ROS1, also limiting bandwidth there. The 450MByte stream dropped to 60 MByte, all sensors signals were scaled down in the same manner. Why is there a feedback in the communication behaviour between ROS1 and 2 via the bridge? This is dangerous!

Adding the additional computers to the network made the problem worse. There also seem to be particular effects of the settings of the used router.
The corresponding ROS1 publishers could be crashed when DDS could not handle the load over the network even on paired communication.

Network discovery was a pain in the ass as the central server has 8 network ports and DDS hat a hard time finding the right one to the other system. Specifying the target IP with the eProsima examples did not work.

The whole DDS system crashed when too many participants joined the network (5 systems in total).

Ros1 bridge seems to be very volatile as well. ","ROS1 more or less worked out of the box without requiring an in depth understanding of the RMW. ROS_DOMAIN_ID and discovery is much harder to debug and understand compared to the network setup of ROS1.
Should there be documentation for it, we didnt find it easily. Requiring to find it would also make the user experience worse compared to ROS1. We love ROS(1) overall ;)",I am lacking the technical knowledge of the RMW details for a decision like that. All I can say is that the default didnt work well at all for our use case.,Make the ROS2 network communication as easy to use as ROS1 ;) Keep up the good work!
2020/10/04 7:22:54 AM MDT,Eloquent,One robot with multiple onboard computers,"A hardwired Ethernet connection;Embedded communications (serial, I2C, USB, etc)",Autonomy / Vehicle,4,2.5,4,4,No,eProsima FastDDS (Foxy default),Agree,Neutral,NO OPINION / NOT APPLICABLE,Agree,Strongly Disagree,Neutral,Disagree,Disagree,Neutral,Disagree,Neutral,Agree,Neutral,Neutral,Neutral,Agree,Strongly Agree,Disagree,NO OPINION / NOT APPLICABLE,I use ROS/ROS2 in my automated driving platform (such as Autoware) and application for the ADS safety. The vehicle and the safety application are controlled by distributed components running on the same ethernet network. I have root access to the network infrastructure. The distributed components all run on ROS and communicate via ethernet.,"I used the default ROS2 RMW, it works out of the box.",Better documentation on the RMW performance profiling and debugging. I would love to see more DDS QoS features enabled in ROS2. I also want documentation or tutorials on how to make ROS2 application talk to native DDS application,RTI DDS is very mature and powerful. The coming TSN-DDS is very attractive for developing safety mechanisms on top of ROS2,
2020/10/05 3:03:18 AM MDT,Eloquent,autonomous driving simulator CARLA,Inter process communication / all on a single machine,Autonomy / Vehicle,7,4,2,6,No,eProsima FastDDS (Foxy default),Strongly Agree,Agree,Neutral,Neutral,Neutral,NO OPINION / NOT APPLICABLE,NO OPINION / NOT APPLICABLE,NO OPINION / NOT APPLICABLE,Agree,Neutral,Neutral,Agree,NO OPINION / NOT APPLICABLE,Agree,NO OPINION / NOT APPLICABLE,Agree,Strongly Agree,NO OPINION / NOT APPLICABLE,NO OPINION / NOT APPLICABLE,,,,,
2020/10/05 1:28:11 PM MDT,Foxy,Multiple robots controlled from multiple computers,A wireless network (802.11 a/b/g) that you control.;A wireless network (802.11 a/b/g) that someone else controls;4G LTE / 5G  / Telecom,Academic Research,8,2,3,5,No,eProsima FastDDS (Foxy default),Strongly Agree,Agree,Agree,Agree,Agree,Agree,Neutral,Neutral,Agree,Agree,Disagree,Strongly Agree,Neutral,Agree,Agree,Strongly Agree,Strongly Agree,Agree,Agree,Multi-UAV systems and heterogeneous multi-robot systems,Default FastDDS in Foxy works nicely,"Provide examples for non-ROS2 python/cpp scripts using DDS but not ROS, for external applications to directly write/read (serialize/unserialize) basic ROS message types.",I think discussing a default RMW before each distro is a good idea.,
2020/10/05 2:55:08 PM MDT,Foxy,Multiple robots controlled from multiple computers,"Inter process communication / all on a single machine;A hardwired Ethernet connection;A wireless network (802.11 a/b/g) that you control.;Embedded communications (serial, I2C, USB, etc)",Agriculture,8,2,3,5,No,eProsima FastDDS (Foxy default),Strongly Agree,Neutral,NO OPINION / NOT APPLICABLE,Disagree,Disagree,Neutral,Neutral,Neutral,Agree,Agree,Neutral,Strongly Agree,Neutral,Neutral,Agree,Strongly Agree,Agree,Agree,Neutral,,,,,
2020/10/05 4:31:27 PM MDT,Foxy,One robot with multiple onboard computers,A hardwired Ethernet connection;A wireless network (802.11 a/b/g) that you control.;4G LTE / 5G  / Telecom,,4,1,3,4,Yes,ADLink CycloneDDS,Strongly Disagree,Strongly Disagree,Strongly Agree,Strongly Agree,Disagree,Strongly Agree,Agree,Strongly Disagree,Strongly Agree,Strongly Agree,Strongly Agree,NO OPINION / NOT APPLICABLE,Strongly Agree,Strongly Agree,NO OPINION / NOT APPLICABLE,Agree,NO OPINION / NOT APPLICABLE,Agree,NO OPINION / NOT APPLICABLE,root access to network infrastructure with several computers connected to the network over ethernet,several stability issues with FastRTPS in dashing. Setup issue with cyclone. Cyclone has been more stable ,it would be nice if the tier 1 RMW layers had a standardized method of debugging. It is daunting when a cyclone or fastrtps issue can only be understood by learning the tools associated with that that dds.,"cyclone has been more stable for me across the d-f releases, and usually performs better in my system. Eboasson always responds to my issues quickly and in great detail when I do run into a problem ",
2020/10/05 4:38:33 PM MDT,Foxy,Multiple robots controlled from multiple computers,Inter process communication / all on a single machine;A wireless network (802.11 a/b/g) that someone else controls,Academic Research,8,8,5,6,Yes,RTI Connext,Agree,Strongly Agree,Strongly Agree,Agree,Disagree,Neutral,Strongly Agree,Strongly Agree,Agree,Strongly Agree,Agree,Strongly Agree,Disagree,Agree,Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,"Multiple research robots are wirelessly connected to each other via a corporate WiFi infrastructure. This infrastructure is not in our direct control, but we can register mac addresses of client radios so they can be assigned to a common subnet. This allows for DDS discovery. Robots have one WiFi radio each, but may have multiple networked devices onboard; e.g. IP cameras, IP LIDARs, both realtime and non-realtime computers.

Aside from the WiFi routers, no infrastructure/comput exists on board the robots, with the uptime of the robots being entirely ephemeral from each other, thus distributed discovery is important to us, and helps avoid the single point of failure we've encountered with ROS1 master, ROS1 multi master, or DDS discovery server setups.","RTI Connext was the first and only DDS RMW to support the DDS Security specification, that we required for deployment on shared corporate WiFi networks. Later, FastRTPS/Fast-DDS introduced support, but did not, and still doesn't, interoperate with other DDS vendors with security enabled. We still prefer RTI Connext for security as well as the default enabled shared memory IPC, but it's need for an EOL version of OpenSSL and library incompatibility with OpenSSL shipped in latest linux LTS distros makes it a pain to install/setup. Perhaps such issues have been resolved in RTI Connext v6.0, but the ROS2 rmw still seems to be stuck on the previous v5.3 release.

We've also had scaling issues with RTI Connext, as launching the default Nav2 stack alone can spawn more than 40+ DDS participants, quickly exhausting the default RTI Connext participant discovery limit. Fast-DDS still seems to work under such circumstances without security, but seems to exhibit bring up issues when security is enabled for such scales and larger.

We have not invested in Cyclone as of yet, given: its rmw support for DDS security specification isn't yet well documented, and it still fails to pass all Navigation2 package tests (Fast-DDS being the only rmw as of yet that does).","I think there is a missing level of abstraction, such as a description of a collection of networked devices that are internal vs external of a given robot. For example, with multiple networked sensors and computers on the same robot platform, it would be great for multi robot scenarios if one could use DDS partitions natively from DDS RMWs to designate the scope and origin of topic data.

For intercommunication between robots, having to namespace ROS topics with prefix robot names to avoid unintended cross talk is not ideal. Adding such prefixes to existing ROS topics breaks many assumptions for official ROS2 packages/tools that rely on the assumed root level topics, such as /tf or /parameter_events .

For example there are some local topics of a robot that would be nice to be subscribable/mux-able globally across the swarm, such as /robot_pose , then others that would be best filterable for all subscribers, such as /scan . Using partitions could enable both use cases while remaining transparent for monitoring tools, such as rviz that could be used to subscribe to the single /camera topic from all robots in the same fully connected swarm in a shared DDS domain.

Different QoS settings could then be attributed to different domains, i.e. whether topic data is from a partition onboard the robot over local LAN connection, or off board the robot from a external partition over WLAN. All without having to overhaul customize launch files and security artifacts with topic remappings just to use existing community packages.","In my experience, Connext has the best performance, the best documentation, the best DDS debugging tooling, and the best DDS compliance over all current RMW vendors. However, it's not open source, so I can not recommend it as the default RMW for ROS2 for that single reason. If this were to change, my opinion on this would likely change as well.

In light of that, Fast-DDS has shown significant improvement, adding security and promising shared memory IPC support, while Cyclone DDS still seems to be in development and under documented from its ADLINK to Eclipse handover.

My one reservation with Fast-DDS is that it's default tolerance to excessive participants is a double edge sword, leading ROS package developers to design architectures that are not considerate of scalable constraints or interoperable with larger or heterogeneous DDS networks. But perhaps this can be rectified with better support for composable nodes in ROS2, helping to reduce the number of DDS participants per ROS stack/application to a more tractable ratio.","I would like to reiterate the value of the default distributed DDS discovery currently shipped with ROS2. This is great not only for avoiding single point of failures, but also in user experience. When teaching beginner or students, I no longer have to debug with them to determine where the ROS1 master namespace discovery server is running, either on their laptop, phone, or robot, it just works(TM)!

No more DHCP issues from dynamic IP address changes from spotty WiFi, no more finding/copying new robot IP address prior to shell setup, no more careful launch bring-up/shut-down procedures to avoid orphaned nodes when accidently restarting roscore, no more reminding students to update there config when moving between  the lab, dorm, or house networks to do homework.

Instead of reminding students/lab-mates of the difference/format between ROS_MASTER_URI and ROS_IP, I just assign each robot/team a unique ROS_DOMAIN_ID to avoid cross talk between users in the lab space.

Much of these quality of life improvements equally apply to ROS developers and multidisciplinary robotic users who may not have CS/IT or networking backgrounds. So, please do not change discovery behavior to be local loopback only, as distributed network computing is the default use case for much of ROS. If advance users need to customize/curtail discovery further, then they should feel free to deviate from the defaults."
2020/10/05 5:37:33 PM MDT,Foxy,One robot with multiple onboard computers,"Inter process communication / all on a single machine;A hardwired Ethernet connection;4G LTE / 5G  / Telecom;Embedded communications (serial, I2C, USB, etc)",Autonomy / Vehicle,5,3,3,4,No,eProsima FastDDS (Foxy default),Strongly Agree,Strongly Agree,Agree,Strongly Agree,Disagree,Neutral,Neutral,Neutral,Agree,Neutral,Agree,Strongly Agree,Neutral,Agree,Agree,Strongly Agree,Strongly Agree,Agree,Neutral,"high resolution perception sensors on autonomous vehicles where data throughput, synchronization and reliability are critical",I have tried out the recently open sourced rmw_ecal from Continental with some success in order to try and take advantage of the shared memory capability.,Very prominent performance benchmarks. right now i think they are just on a github repo with a link. maybe make a page on the index?,No preference,rmw_ecal is being worked on by some of my colleagues within Continental and was just recently open sourced. I would guess they would be interested in getting it listed somehow with the other rmw's for ROS2. Is there someone who could help the team through that process?
2020/10/05 8:14:31 PM MDT,Foxy,Multiple robots controlled from multiple computers,Inter process communication / all on a single machine;A wireless network (802.11 a/b/g) that you control.,Corporate R&D,8,3,5,6,No,eProsima FastDDS (Foxy default),Agree,Strongly Agree,Strongly Agree,Neutral,Disagree,Agree,Strongly Agree,Agree,Agree,Agree,Neutral,Strongly Agree,Disagree,Agree,Agree,Agree,Strongly Agree,Neutral,Neutral,"Devices are connected with each other via WAN, and expecting approximately to support 100 systems. in the system, more than 100 nodes running at the same time.",default RMW works okay.,"use cases or recommendation would be nice to make decision by user. without it, having several RMW implementation would be complicated for end-user.",it would be easier just to let user choose during installation or environmental variable.,
2020/10/06 7:59:31 AM MDT,Foxy,One robot powered with a single computer,Inter process communication / all on a single machine;A wireless network (802.11 a/b/g) that you control.,Corporate R&D,8,10,3,5,Yes,ADLink CycloneDDS,Disagree,Agree,Strongly Agree,Agree,Neutral,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Disagree,Agree,Strongly Agree,Strongly Agree,Strongly Agree,Agree,Neutral,Strongly Agree,NO OPINION / NOT APPLICABLE,A mobile manipulator with onboard computer. A Linux desktop connects for visualization (RVIZ2) over a Ubiquiti networks wifi.,I started with FastDDS - but the service discovery bug was killing my ability to develop. Switched to CycloneDDS. Had some initial issues with multiple network ports on CycloneDDS - but the developers were awesome in providing support and that was quickly resolved. I've stuck with CycloneDDS because it works well for my application.,"All of the RMW implementations need a ""guide to configuring"" like CycloneDDS. There's lots of knobs - but finding out what they do is quite difficult.",I've seen so many people switching to CycloneDDS (especially those using nav2).,
2020/10/06 9:58:39 AM MDT,Eloquent,One robot powered with a single computer,Inter process communication / all on a single machine,Medical,7,4,3,5,Yes,OpenDDS,Disagree,Agree,Agree,Strongly Agree,Neutral,Agree,Agree,NO OPINION / NOT APPLICABLE,Agree,Strongly Agree,Strongly Agree,Strongly Agree,NO OPINION / NOT APPLICABLE,Agree,NO OPINION / NOT APPLICABLE,Strongly Agree,Agree,NO OPINION / NOT APPLICABLE,NO OPINION / NOT APPLICABLE,"One computer connected to multiple sensors and actuators, so inter-communication based mainly","We started using ROS2 Eloquent default RMW, but we found some problems (Services hangs up a lot of times), so we switched to OpenSplice, with satisfactory results. Not perfect, but enough for our prototypes.","Better documentation would be wonderful: Compared with ROS1, ROS2 need to evolve to reach ROS1 documentation, tutorials, wikis... level","We found problems in all the RMWs we used, so we cannot choose an special RMW in this moment. All we can say is OpenSplice is working fine.",Good job with ROS2 development! We love its stability compared with ROS1
2020/10/06 8:10:54 PM MDT,Foxy,One robot powered with a single computer,"Inter process communication / all on a single machine;A wireless network (802.11 a/b/g) that you control.;Embedded communications (serial, I2C, USB, etc)",Industrial,6,8,3,4,No,eProsima FastDDS (Foxy default),Agree,Agree,Disagree,Disagree,Neutral,Neutral,Disagree,Neutral,Agree,NO OPINION / NOT APPLICABLE,Strongly Disagree,Agree,Neutral,Neutral,Neutral,Strongly Agree,Agree,Neutral,Neutral,"Robot inside a building, that is remplacing follow line robot with navigation2 stack and lidar sensors","We have used the default RMW for ros2 foxy, really is my first experience with ros2, because last projects I have work it with ROS1","Not in this project , but for academy should be nice to be easy to scale the ROS to be used from wan network, principally rigth now in COVID era.","I like ciclone DDS like a new and open source implementation, but I  do not know the consequences for this change",
2020/10/09 2:13:09 AM MDT,Dashing,One robot with multiple onboard computers,"Inter process communication / all on a single machine;A hardwired Ethernet connection;Embedded communications (serial, I2C, USB, etc);PCIe",Autonomy / Vehicle,7,1,3,5,No,eProsima FastDDS (Foxy default),Disagree,Agree,Neutral,Neutral,Neutral,NO OPINION / NOT APPLICABLE,Neutral,NO OPINION / NOT APPLICABLE,Disagree,NO OPINION / NOT APPLICABLE,Agree,Strongly Agree,NO OPINION / NOT APPLICABLE,Neutral,Neutral,Agree,Strongly Agree,NO OPINION / NOT APPLICABLE,NO OPINION / NOT APPLICABLE,,Using in context of Autoware.auto. Had to change to cyclone DDS in order to use LGVE Simulator ,,,
2020/10/09 3:14:54 AM MDT,Foxy,"Multiple options from the list above (1, 3, 5)",A wireless network (802.11 a/b/g) that you control.;A wireless network (802.11 a/b/g) that someone else controls,Industrial + Support Software + Logistics,8,7,5,5,No,eProsima FastDDS (Foxy default),Strongly Agree,Strongly Agree,Agree,Disagree,Neutral,Strongly Agree,Strongly Agree,Agree,Agree,Strongly Agree,Strongly Disagree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Agree,"Robotics and Automation for Industry. Aplications gravitate around industry 4.0 ideas in which distributed assets must cooperate some of them are built upon well-known robotics platforms, others are tailored robotics/automation modules that have been developed as part of a larger turn-key solution. In general, we account for privileged/root access to the network but our aim is to materialize more ambitious deployments including convenient integration with cloud applications that run on external infrastructures.  ","For the time being, I have always relied on the default ROS RMW. I found no problems in my way, so all I can say is that I am having a good experience with it.",Probably is just a matter of dedicating some more time from my side to this aspect but I would say that I miss some documentation and examples on how to exploit the DDS QoSs from the ROS level.,"I would vote positively for the current one, in fact I'have gone through their documentation (Fast DDS, XRCE DDS and Integration Service) besides the official ROS documentation. To me, the integration service is being quite useful to promote the acceptance of ROS2 features. I am familiar with this stuff and I am not willing to experience changes on this part of my systems.",
2020/10/09 3:16:50 AM MDT,Foxy,Multiple robots controlled from multiple computers,Inter process communication / all on a single machine;A wireless network (802.11 a/b/g) that you control.;A wireless network (802.11 a/b/g) that someone else controls,Academic Research,7,4,3,5,Yes,eProsima FastDDS (Foxy default),Agree,Agree,Neutral,Disagree,Neutral,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Neutral,Neutral,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,"Teaching robotic courses at university, using multiple robots and components across cloud infrastructure. We don't manage the network infrastructure and firewalls / NAT are often in the way. Multicast does not go across our networks so discovery needs to be taken care of.",I used the default,I would like networking to be hidden as much as possible. I'd like ROS2 to provide native tools to configure networking and bridge across different subnets.,"We had no issues specific to the default DDS implementation, we had issues with DDS default discovery (i.e., multicast)",
2020/10/09 4:54:36 AM MDT,Foxy,Multiple robots controlled by a single computer,A hardwired Ethernet connection;A wireless network (802.11 a/b/g) that you control.,Corporate R&D,9,3,4,5,No,eProsima FastDDS (Foxy default),Strongly Agree,Agree,Strongly Agree,Disagree,Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Disagree,Neutral,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,"We have several robots using raspberry pi that communicates with a centralized server.
The server uses ethernet and the raspberries wifi.",We are using the default.,,The current stardard works great and its support is generally very good.,
2020/10/09 5:01:45 AM MDT,Foxy,One robot powered with a single computer,"Inter process communication / all on a single machine;A hardwired Ethernet connection;Embedded communications (serial, I2C, USB, etc)",Autonomy / Vehicle,8,2,4,5,No,eProsima FastDDS (Foxy default),Strongly Agree,Strongly Agree,Agree,Disagree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Disagree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,ROS2 development for embedded systems,Foxy default RMW works well,,"eProsima FastDDS is a mature DDS product with complete support, features and documentation.",
2020/10/09 5:23:20 AM MDT,Foxy,One robot powered with a single computer,Inter process communication / all on a single machine,Corporate R&D,7,1,4,4,No,eProsima FastDDS (Foxy default),Strongly Agree,Strongly Agree,Strongly Agree,Disagree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Disagree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,,,,,
2020/10/09 9:07:55 AM MDT,Foxy,One robot with multiple onboard computers,"Embedded communications (serial, I2C, USB, etc)",Education,7,3,4,4,No,eProsima FastDDS (Foxy default),Strongly Agree,Strongly Agree,Agree,Neutral,Neutral,Strongly Agree,Agree,Agree,Strongly Agree,Agree,Disagree,Strongly Agree,Strongly Agree,Strongly Agree,Neutral,Strongly Agree,Strongly Agree,Strongly Agree,Agree,For fun. Toys with microcontrolers. I use USB and LAN. I have root access.,Default worked great for me,No.,Best is RTI but it is not free. Current default fastDDS works great.,No
2020/10/10 4:47:21 PM MDT,Foxy,Autonomous vehicle -- with a multiple onboard and remote computers,Inter process communication / all on a single machine;A hardwired Ethernet connection;4G LTE / 5G  / Telecom,Autonomy / Vehicle,9,2,3,5,Yes,ADLink CycloneDDS,Agree,Agree,Neutral,Disagree,Agree,Strongly Agree,Agree,Agree,Agree,Agree,Strongly Disagree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Agree,Strongly Agree,Agree,Agree,Autonomous vehicle... multiple Ethernet connected computers & sensors. LTE and WiFi links to engineering stations and remote operator control stations. ,Converted to CycloneDDS... Got better network performance. Marginally more stable. Better visibility and debug tools. Wasn't that bad to convert over. ,"Faster failover on node failure and better visibility when they occur. Better network ""sniffing"" tools would be nice as well as multi-cast. An integrated highly accurate distributed time-sync (IEEE1588?) across all ROS nodes would be great so we can better line-up the sensor and processing data. ",CycloneDDS... only based on my limited experience seems pretty good. ,As a university the DDS being fully open source is very important. 
2020/10/12 12:11:45 PM MDT,Foxy,One robot with multiple onboard computers,"Inter process communication / all on a single machine;A hardwired Ethernet connection;A wireless network (802.11 a/b/g) that you control.;A wireless network (802.11 a/b/g) that someone else controls;4G LTE / 5G  / Telecom;Embedded communications (serial, I2C, USB, etc);Acoustic links, Power Line Communications (ethernet over 2-wire AC)","Industrial, research (university), aquaculture, hardware development, prosumer drone users",10,7,4,6,Yes,ADLink CycloneDDS,Strongly Disagree,Strongly Agree,Strongly Agree,Strongly Agree,Disagree,Agree,Agree,Agree,Agree,Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Agree,Neutral,"Marine robotics 'OS'/framework built on top of ROS2 and DDS, which includes multiple CPU and MCU components communicating over many types of network interfaces (both embedded links, shared memory, standard IP links, and non-standard high-bandwidth links). This 'OS' is a base host operating system with a number of docker images running several ROS2-based and other types of applications that provide a functional marine vehicle (both manually controlled and autonomous underwater and surface vehicles like ROVs, AUVs, boats, benthic rovers, underwater camera systems, sensor systems, etc). The vehicles typically run on their own individual private networks, but are also designed to run on several network topologies, such as many vehicles on a single network, over the internet via LTE, over mesh networks, and more. Control over the network is often available in our applications, except when teleoperating over the internet, where some custom infrastructure is required.","I started by using pure DDS for several years (before ROS2 was even announced), mainly using RTI's Connext Pro and Connext Micro implementations. I have a lot of deep experience working with DDS in many environments, such as aerial drones at NASA, underwater drones at OpenROV, self-driving cars at Voyage Auto, and now at Mission Robotics, a marine robotics company I recently co-founded with two other former OpenROV colleagues. I have also given presentations at RTI's user conference and other events. I was hoping to use ROS2 at OpenROV for the development of our consumer underwater drone, Trident, but at the time ROS2 was only on the Bouncy release and I did not find it adequate to be used in a consumer product that was entirely sealed and could not be manually updated or have its SD card replaced by the end user, nor did I find FastRTPS to be stable or capable enough to meet our technical requirements, leading us to use Connext Pro, keeping things mostly compatible with ROS2 so that we could migrate later. I followed ROS2 development since the very beginning and started to use it heavily after the Dashing release, which I saw as a major milestone for ROS2 (I was there at the meetup event when they cut the cake!), and have since been using Dashing, Eloquent, and now Foxy for early development. I am fairly happy with Foxy from the RMW API standpoint, though I have continued to have a number of intermittent issues with FastRTPS (now FastDDS). We switched to using Cyclone DDS, which resolved most of these issues and intend to stick with it going forward. There may be cases where we choose to use RTI's DDS implementations on a case-by-case basis with certain customers.","The most helpful thing for myself and many other developers I have talked with in the industrial/commercial space is for the RMW to do a better job of exposing DDS features to the developer. In our use-cases, we only ever use one single implementation within an entire deployment and development environment, and we choose that implementation based on its capabilities and features. This could be achieved by either providing direct access (and the ability to create and control) all of the DDS entities/APIs, and/or by creating a DDS abstraction layer that exposes all standard DDS features, as well as ways to access vendor extensions and unique features. 

Historically, the docs and reading materials/tutorials have been all over the place in terms of quality, consistency, and use of best-practices, but I know these are currently being worked on heavily and there has been a lot of progress, so I won't harp on that.","Right now, I would advocate for Cyclone DDS, with FastDDS still being a relatively close second. I think FastDDS works for most users in most use-cases, particularly users who may not be working in commerical/industrial environments, such as university labs or personal projects, but I have had both performance and reliability issues with it relating to discovery, implementation of DDS features, sending of large-data, and more, which Cyclone fully resolved for me. License-wise, they are both agreeable options.","Just want to say that I find the ROS2 TSC meeting notes extremely useful for tracking the direction and development of ROS2, and that overall I have been generally happy with the development and adoption of ROS2. I've been eagerly anticipating the period of time we are now in, with respect to ROS2's maturity, and am enjoying developing our products with it and teaching and demonstrating to our team how it will greatly change the way we develop software. 

I also really appreciate the work done by Katherine Scott in working with the community to solicit feedback (like this survey!), improve the overall ROS2 experience in many ways, and also her efforts to keep discussions civil in the ROS Discourse. Because ROS2 is moving into new territory targeting new application domains, industrial applications, and being adopted by large organizations and corporations, it is clear that the composition of the community is changing (which I believe is a good thing), which will require, as I have seen, good stewards of the community to make sure everyone feels welcome and can contribute and engage with others in a positive way. 

Thanks and keep it up, everyone!"
2020/10/13 8:28:17 AM MDT,Foxy,One robot controlled from with second remote computer as a terminal.,Inter process communication / all on a single machine;A hardwired Ethernet connection;A wireless network (802.11 a/b/g) that you control.,Autonomy / Vehicle,2,5,3,4,No,eProsima FastDDS (Foxy default),Neutral,Neutral,Neutral,Agree,Neutral,Disagree,Disagree,Disagree,Agree,Strongly Disagree,Agree,Strongly Disagree,Disagree,Disagree,NO OPINION / NOT APPLICABLE,Disagree,Strongly Disagree,Strongly Disagree,Disagree,"single robot autonomously driving, part of bigger system","started at B, and in general the added complexity and non-trivial performance penalties of DDS were a nightmare compared ros1.. ",disable all the weird delaying discovery systems by default. default disable networked systems.,nope,nope
2020/10/13 1:20:52 PM MDT,Foxy,One robot powered with a single computer,"Inter process communication / all on a single machine;A wireless network (802.11 a/b/g) that you control.;Embedded communications (serial, I2C, USB, etc)",Academic Research,6,3,3,5,Yes,eProsima FastDDS (Foxy default),Strongly Agree,Neutral,Neutral,Agree,Strongly Disagree,Disagree,Disagree,Disagree,Strongly Agree,Strongly Agree,Disagree,Strongly Agree,Neutral,Neutral,Neutral,Strongly Agree,Agree,Neutral,Neutral,Single robot working independetly controlled over Wifi,Have used Fast DDS from the beginning and faced no issues. Switched to Cyclone and it failed to work for Nav2 on Ubuntu 18.04.,"More documentation on the features available in each RMW, Shared Memory support, better documentation and examples and benchmarks.",-,"If there are no signifcant advantages please continue with the currrent one. If it ain't broke, don't fix it."
2020/10/13 3:50:04 PM MDT,Foxy,"Implementing HW support for cyclone DDS with zero packet loss, no skew and no jitter",Lightfleet Multiflo,Autonomy / Vehicle,10,1,5,7,No,ADLink CycloneDDS,Strongly Agree,Neutral,Neutral,Strongly Disagree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Disagree,Neutral,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,"We are working with ADLink to bring CycloneDDS with Lightfleet Multiflo(tm) to the market. Very briefly, Lightfleet Multiflo is a hardware based fabric with zero packet loss and zero skew/jitter. ","We are working with ADLink, and as such, selected CycloneDDS.","With our fabric (Lightfleet Multiflo), Cyclone DDS will have zero packet loss, zero Skew & Jitter, and muticast packets will be delivered to all endpoint simultaniously.",I am advocating for CycloneDDS!,We look forward to working with the community to bring all of the Lightfleet Multiflo advantages to the Cyclone DDS users - both current and new.
2020/10/13 4:20:46 PM MDT,Dashing,Multiple robots controlled from multiple computers,4G LTE / 5G  / Telecom,Logistics / Fullfillment,8,9,2,5,Yes,Gurum DDS,Agree,Neutral,Strongly Agree,Agree,Strongly Agree,Agree,Disagree,Strongly Disagree,Agree,Agree,Agree,Neutral,Disagree,Agree,Disagree,Strongly Agree,Agree,Neutral,Neutral,It is an outdoor autonomous robot and uses LTE and 5G routers. The part connecting the WAN and LAN is very important.,"The Cyclone DDS is used by default for personal work unless it is company work. Especially for me, it showed better performance than Fast DDS when it had to connect with VPN.","There are tools to compare RMWs, but I would like to openly share the benchmarking information on a quarterly basis at ROS discourse.",I have no intention of advocating for a specific RMW. It doesn't matter if it's open source and has good performance. So I think that changing defaults from time to time can grow through competition.,I am always grateful. Thank you.
2020/10/13 5:15:08 PM MDT,Foxy,One robot controlled from with second remote computer as a terminal.,"A wireless network (802.11 a/b/g) that you control.;Embedded communications (serial, I2C, USB, etc)",Education,3,3,2,3,Yes,eProsima FastDDS (Foxy default),Disagree,Disagree,Neutral,Neutral,Disagree,Neutral,Neutral,Neutral,Neutral,Neutral,Neutral,Agree,Neutral,Neutral,Neutral,Agree,Neutral,Agree,Agree,"I use one robot, robot use wifi , and there is two pc connected by wifi( sbc, remote pc). And i use routor ,no use lte, but i will consider lte, 
and i don't have privileged/root access to the network infrastructure.","i think default rmw is no problem, the rmw change reason is just education.
I don't like no free dds :)","No, sorry i just ros application user.
I don't consider dds, just use default dds",Sorry i just only use default fast dds,"I need ros2 serial foxy version 
I think there is no solution package to communication arduino at foxy version
Thank you"
2020/10/13 7:47:52 PM MDT,Foxy,One robot with multiple onboard computers,"Inter process communication / all on a single machine;A hardwired Ethernet connection;Embedded communications (serial, I2C, USB, etc)",Autonomy / Vehicle,10,4,5,6,Yes,ADLink CycloneDDS,NO OPINION / NOT APPLICABLE,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,,,,"CycloneDDS, it's based on C and light weight",
2020/10/13 10:53:13 PM MDT,Foxy,Sensor with a complex processing flow,Inter process communication / all on a single machine,Hardware Develpoment,7,10,4,5,No,OpenDDS,Agree,Agree,Strongly Agree,Disagree,Neutral,Strongly Agree,Agree,Neutral,Strongly Agree,Strongly Agree,Agree,Strongly Agree,Agree,Strongly Agree,Neutral,Strongly Agree,Agree,Agree,Neutral,Sensor on a single big computer,"I had to use IPC feature of opendds. I had some small configuration issue to enable it, but OpenDDS support helped me on the discourse.","Fastdds documentation is very good, but I can't find a good rmw_fastdds documentation.","The fastest teams seems to be very active, and answers quickly to my question. For me this is a very good point. But I didn't test the support capacity of other vendors.",
2020/10/14 2:44:30 AM MDT,Foxy,Multiple robots controlled from multiple computers,Inter process communication / all on a single machine,Logistics / Fullfillment,9,3,4,6,Yes,eProsima FastDDS (Foxy default),Neutral,Neutral,Neutral,Neutral,Neutral,Neutral,Neutral,Neutral,Neutral,Neutral,Neutral,Neutral,Neutral,Neutral,Neutral,Neutral,Neutral,Neutral,Neutral,,,,,
2020/10/14 3:39:54 AM MDT,Foxy,ROS2 robots interacting with cloud-based smart solution,A wireless network (802.11 a/b/g) that you control.;A wireless network (802.11 a/b/g) that someone else controls;4G LTE / 5G  / Telecom,Industrial,6,3,3,4,No,eProsima FastDDS (Foxy default),Strongly Agree,Strongly Agree,Agree,Disagree,Agree,Strongly Agree,Agree,Agree,Strongly Agree,Strongly Agree,Disagree,Agree,Strongly Agree,Strongly Agree,Strongly Agree,Agree,Agree,Strongly Agree,Agree,"The kind of applications we are developing use to integrate ROS/ROS2-based robots within the architecture of solutions powered by FIWARE.   FIWARE (https://fiware.org) is an open source initiative aimed at bringing standard-based platform technologies that ease development of smart solutions in multiple sectors (e.g., smart cities, smart manufacturing, etc).  FIWARE collects information from different sources (robots, IoT devices, information systems) to build a digital twin data representation of the world and support which is then constantly kept updated and processed/analysed to bring support to the automation of certain processes or the adoption of smart decisions.   This may turn into actuations channeled again through different means (robots, IoT devices, other systems).   ROS2 robots may connect with the FIWARE backend through different kind of networks since the backend may run on the cloud or on dedicated servers on premise.  The connection used to be implemented through gateways that translate between DDS and NGSI (the standard used for context information management in FIWARE).","We started to work in the area of ROS/ROS2 and FIWARE since around 2-3 years.  You may check some webinars to learn more (some are generic about FIWARE, others more robotics-centric) at  https://www.fiware.org/community/fiware-webinars/

We have been working with eProsima's Fast DDS as RMW and works pretty well.",More information how to exploit QoSs in DDS would be valuable.,eProsima's Fast DDS continues being the best choice as default RMW given its robustness and performance.  Benchmarking results demonstrate that.,I believe that means for easing the integration of ROS2 systems within architecture of smart solutions powered by FIWARE (https://fiware.org) is worth exploring.
2020/10/14 5:55:39 AM MDT,Foxy,Multiple robots controlled by a single computer,"Inter process communication / all on a single machine;A hardwired Ethernet connection;A wireless network (802.11 a/b/g) that you control.;A wireless network (802.11 a/b/g) that someone else controls;4G LTE / 5G  / Telecom;Embedded communications (serial, I2C, USB, etc);Husarnet VPN",Academic Research,8,3,3,5,Yes,ADLink CycloneDDS,Agree,Agree,Agree,Neutral,Neutral,Agree,Agree,Agree,Strongly Agree,Strongly Agree,Neutral,Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,"Our biggest robot - Husarion Panther (https://husarion.com/manuals/panther/) - contains a router inside (Wi-Fi, LTE, Ethernet) and to that router there are (in the default configurations) two computers connected over ethernet: user computer (Intel NUC, Vizi-AI or iPI) and low-level computer (RaspberryPi 4). The robot can be connected to the Internet over LTE or Wi-Fi. To connect a user laptop to the robot, the default solution that we recommend is Husarnet VPN (https://docs.husarnet.com/docs/tutorial-ros2 ). Husarnet allows P2P, low latency connection over the Internet between user laptop and the robot.","We started with eProsima DDS, however on ROScon in Macau we talked about Cyclone DDS and decided to try it. From our experience Cyclone is much more stable and reliable. Also support from their tech guys is great.","ROS 2 is currently not as popular as ROS, so sometimes debugging is much harder, becasue less people faced the same problem before and often there are not answers in the Internet. Next to good documentation we love examples and tutorials that step-by-step show you how to run somenthing, or use a new technology in ROS 2 ecosystem.","Yes, I strongy recommend Cyclone DDS for the reasons mentioned before: it's stability, code quality, and great support experience",
2020/10/14 7:26:11 AM MDT,Dashing,One robot powered with a single computer,Inter process communication / all on a single machine,Autonomy / Vehicle,7,2,4,5,Yes,ADLink CycloneDDS,Agree,Agree,Agree,Agree,Agree,Agree,Agree,Agree,Agree,Agree,Strongly Disagree,Strongly Agree,Neutral,Strongly Agree,Neutral,Strongly Agree,Strongly Agree,Agree,Agree,,,,,
2020/10/14 7:51:41 AM MDT,Foxy,One robot with multiple onboard computers,A hardwired Ethernet connection,Industrial,8,2,4,5,No,eProsima FastDDS (Foxy default),Strongly Agree,Agree,Agree,Disagree,Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Disagree,Agree,Strongly Agree,Strongly Agree,Strongly Agree,Agree,Agree,Agree,Neutral,"porting ROS2 to VxWorks, integrate with micro-ROS","I have ported a default RMW and it works for me, didn't look into other RMWs",,"FastRTPS, it works under VxWorks",
2020/10/14 9:52:37 AM MDT,Eloquent,One robot with multiple onboard computers,Inter process communication / all on a single machine;A hardwired Ethernet connection,Industrial,6,4,3,4,Yes,ADLink CycloneDDS,Agree,Agree,Agree,Agree,Neutral,Neutral,Disagree,Neutral,Agree,Agree,Agree,Neutral,Agree,Agree,NO OPINION / NOT APPLICABLE,Agree,Agree,Agree,Agree,"My system uses a UR-10e collaborative robot to perform an industrial surface processing operation using unique-per-cycle motion plans based on perceived data about the environment. Since the UR driver is only available for ROS 1 currently, we communicate with the robot through the ros1_bridge node. The system consists of a collection of ROS2 nodes running on two computers: a ""main"" PC and a dedicated planning server (both integrated into the workcell), which communicate through a direct Ethernet connection. As the system designed I do have root access to the network infrastructure, but the system itself does not operate with elevated privileges.","Started out with FastRTPS, since it was the default. As we added more nodes and greater volumes of larger messages we noticed increased latency and higher incidence of dropped messages (at least under the default settings -- we didn't explore tuning the settings to fix this).
Next we moved to OpenSplice. This resolved the issue with dropped messages and let us keep working. However, nodes took a long time to initialize and begin publishing messages, and topics advertised by newly-launched nodes were not consistently visible to existing nodes. These weren't direct obstacles for our system so we used OpenSplice for several months.
We tried CycloneDDS when we updated the system to Eloquent, and it didn't produce any of the problems I've described, so that's what we're using right now.",Need more information describing RMW and DDS configuration beyond basic setup and operation. One example was that I needed to learn how to configure DDS to use specific network interfaces to allow my application to work as a distributed system across several computers (this might be a CycloneDDS-specific thing).,"I've previously publicly endorsed CycloneDDS, and that's still my pick going forward. It had the best out-of-the-box performance on my system of all the implementations I've tried.",
2020/10/14 11:11:48 AM MDT,Foxy,Multiple robots controlled from multiple computers,Inter process communication / all on a single machine;A hardwired Ethernet connection,Autonomy / Vehicle,8,6,4,6,Yes,eProsima FastDDS (Foxy default),Agree,Strongly Agree,Strongly Agree,Strongly Agree,Neutral,Agree,Agree,Disagree,Strongly Agree,Strongly Agree,Neutral,Strongly Agree,Neutral,Agree,Agree,Strongly Agree,Strongly Agree,Strongly Agree,Neutral,,We use both FastDDS and CycloneDDS - they have different strengths. The default of FastDDS works well for us. In simulation we use CycloneDDS for technical reasons (Unity3D bug with exporting incompatible symbols),Unified debugging and performance tools,,
2020/10/14 1:12:56 PM MDT,Foxy,Multiple robots controlled from multiple computers,Inter process communication / all on a single machine;A hardwired Ethernet connection;A wireless network (802.11 a/b/g) that you control.;4G LTE / 5G  / Telecom,Support Software,10,5,4,4,Yes,eProsima FastDDS (Foxy default),Strongly Agree,Strongly Agree,Strongly Agree,Agree,Agree,Agree,Agree,NO OPINION / NOT APPLICABLE,Agree,Agree,Agree,Agree,Agree,Agree,Agree,NO OPINION / NOT APPLICABLE,Agree,Agree,Agree,Hololens connected to a Robot for visualization and command and control,I've ported MRW implementations to not traditional robotics platforms,Document and support other pub/sub than DDS.,"No, I don't have a preference.",Keep up the good work!
2020/10/15 1:12:14 AM MDT,Foxy,One robot with multiple onboard computers,Inter process communication / all on a single machine;A hardwired Ethernet connection;A wireless network (802.11 a/b/g) that you control.;A wireless network (802.11 a/b/g) that someone else controls,Academic Research,6,10,3,4,Yes,eProsima FastDDS (Foxy default),Agree,Agree,Strongly Agree,Strongly Agree,Strongly Disagree,NO OPINION / NOT APPLICABLE,NO OPINION / NOT APPLICABLE,NO OPINION / NOT APPLICABLE,Disagree,Disagree,Strongly Agree,Neutral,NO OPINION / NOT APPLICABLE,Agree,NO OPINION / NOT APPLICABLE,Disagree,Agree,Neutral,NO OPINION / NOT APPLICABLE,"We're interested in two applications that may be out of the ordinary.

Real-time, high frequency (2KHz) deterministic communications, at least intra-process. With the option of being non-deterministic inter-process for debugging using mostly the same code.

Multiple robots in the same network, isolated between them. In ROS1 it was out of the box and in ROS2 we need to do something explicit, but it's not something we've looked into yet.","We're still evaluating different RMWs, this was quite easy thanks to the docker images available with multiple RMW's plus the environment variable.","Some standarized tests for different use cases, right now I guess anyone who cares about choosing a RMW is doing their own tests from scratch. Even if there are some tools available like Apex's performance test.",,
2020/10/15 2:01:14 AM MDT,Foxy,One robot with multiple onboard computers,A wireless network (802.11 a/b/g) that someone else controls,Industrial,8,2,4,5,No,eProsima FastDDS (Foxy default),Agree,Agree,Neutral,Disagree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,NO OPINION / NOT APPLICABLE,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,,,,,
2020/10/15 2:35:15 AM MDT,Dashing,One robot with multiple onboard computers,"Inter process communication / all on a single machine;A hardwired Ethernet connection;Embedded communications (serial, I2C, USB, etc)",Autonomy / Vehicle,8,1,3,6,No,eProsima FastDDS (Foxy default),Strongly Agree,Strongly Agree,Agree,Neutral,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Disagree,Strongly Agree,Strongly Agree,Strongly Agree,Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,,I used default FastDDS and it works well out of the box.,,"I advocate for FastDDS. It is very well documented, maintained and fast.",
2020/10/15 3:06:41 AM MDT,Dashing,Multiple robots controlled from multiple computers,"A hardwired Ethernet connection;A wireless network (802.11 a/b/g) that you control.;Embedded communications (serial, I2C, USB, etc)",Research,9,2,4,7,Yes,eProsima FastDDS (Foxy default),Neutral,Agree,Strongly Agree,Strongly Agree,Neutral,Strongly Agree,Agree,Neutral,Neutral,Strongly Agree,Strongly Agree,Strongly Agree,Neutral,Agree,Strongly Agree,Neutral,Strongly Disagree,Neutral,Neutral,"Main projects are based on Ethernet network with heterogenous boards (ARM, x86, RiskV). Targeted domains are energy and automotive but we are looking for others. I am administrating the network and some difficulties were found because a node cannot communicate directly over UART. We need a gateway to use those devices. We were hopping to have a complete network but we have currently 2 networks and a bridge UART between them...",We are using the default one but we have to deal with some features for our usecase. I tried others but the FastRTPS or microDDS seems the best for now.,"Well, try other rmw. I saw that IntelDPS for IOT was released. Did you thought about zmq ? It's seems the most appropriate and if I remerber well, ZMQ was used for the proof of concept.",   , 
2020/10/15 3:07:58 AM MDT,Foxy,One robot with multiple onboard computers,A hardwired Ethernet connection;A wireless network (802.11 a/b/g) that you control.,Autonomy / Vehicle,6,6,3,5,No,eProsima FastDDS (Foxy default),Strongly Agree,Neutral,Neutral,Strongly Disagree,Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Disagree,Agree,Strongly Agree,Strongly Agree,Strongly Agree,Agree,Strongly Agree,Strongly Agree,Strongly Agree,Our main applications are autonomous UGVs. For each application we make separate network. We have root access to it.,We use eProsima's and it works without any problems. ,Maybe more examples which will cover more use-cases.,"eProsima's RMW works, so I think it is the best choice.",Please keep Fast RTPS ;-)
2020/10/15 3:11:00 AM MDT,Foxy,One robot with multiple onboard computers,A wireless network (802.11 a/b/g) that someone else controls,Industrial,7,3,4,5,No,eProsima FastDDS (Foxy default),Agree,Agree,Agree,Agree,Agree,Agree,Agree,Agree,Agree,Agree,Agree,Agree,Agree,Agree,Agree,Agree,Agree,Agree,Agree,,,,,
2020/10/15 3:25:11 AM MDT,Eloquent,Multiple robots controlled from multiple computers,Inter process communication / all on a single machine;A hardwired Ethernet connection;4G LTE / 5G  / Telecom,Autonomy / Vehicle,9,5,4,5,No,eProsima FastDDS (Foxy default),Agree,Strongly Agree,Neutral,Disagree,Neutral,Neutral,Neutral,Neutral,Agree,Agree,NO OPINION / NOT APPLICABLE,Strongly Agree,Agree,Agree,Neutral,Neutral,Strongly Agree,Agree,Agree,,,,,
2020/10/15 3:44:04 AM MDT,Foxy,Multiple robots controlled from multiple computers,A hardwired Ethernet connection;A wireless network (802.11 a/b/g) that you control.;A wireless network (802.11 a/b/g) that someone else controls,Academic Research,8,7,4,5,Yes,eProsima FastDDS (Foxy default),Strongly Agree,Strongly Agree,Strongly Agree,Agree,Neutral,Agree,Agree,Agree,Agree,Agree,Agree,Agree,Strongly Agree,Agree,Agree,Agree,Strongly Agree,Strongly Agree,Neutral,"Several mobile robots and arms, controlled by several PCs. Stationary robots are connected via wires while mobile plattforms use Wifi. There is only root access to the PCs, not the network infrastrructure.",Using the default works great. We tested some others to compare realtime capabilities but switched back to FastDDS.,"more documentation about optimizations in special use cases, e.g. realtime",FastDDS - It works great and to many changes make it increase maintenance efforts for custom software,
2020/10/15 3:58:38 AM MDT,Foxy,One robot powered with a single computer,Inter process communication / all on a single machine;A wireless network (802.11 a/b/g) that someone else controls,Industrial,6,4,3,7,No,eProsima FastDDS (Foxy default),Agree,Agree,Agree,Neutral,Neutral,Agree,Disagree,NO OPINION / NOT APPLICABLE,Agree,Agree,NO OPINION / NOT APPLICABLE,Agree,NO OPINION / NOT APPLICABLE,NO OPINION / NOT APPLICABLE,NO OPINION / NOT APPLICABLE,Agree,Neutral,NO OPINION / NOT APPLICABLE,NO OPINION / NOT APPLICABLE,PC connected to Industrial robot. Internally ROS2 & ROS1 via bridge. PC connected to company network via WIFI.,Did not change.,"To be honest, RMW should not be visible. As much of the configuration should be abstracted. I want to focus on robot application development and not network/middleware problems.",No.,No.
2020/10/15 4:38:52 AM MDT,Dashing,Multiple robots controlled by a single computer,A wireless network (802.11 a/b/g) that you control.,Academic Research,9,2,3,4,No,eProsima FastDDS (Foxy default),Agree,Agree,Neutral,Disagree,Agree,Strongly Agree,Strongly Agree,Agree,Strongly Agree,Strongly Agree,Disagree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Agree,"Industrial hand robots autonomously picking goods from boxes, exhibition",My RMW is the first I used and it worked for my purposes,"Documentation is good, but I'd always ask for improvements on this area",none,no
2020/10/15 5:02:21 AM MDT,Foxy,Multiple robots controlled from multiple computers,A hardwired Ethernet connection,Defence,3,2,2,2,,eProsima FastDDS (Foxy default),Agree,Agree,Agree,NO OPINION / NOT APPLICABLE,NO OPINION / NOT APPLICABLE,Strongly Agree,Agree,Neutral,Agree,Strongly Agree,Disagree,Agree,Agree,Strongly Agree,Strongly Agree,Agree,Strongly Agree,Strongly Agree,Neutral,,,,,
2020/10/15 5:04:37 AM MDT,Foxy,Multiple robots controlled by a single computer,A wireless network (802.11 a/b/g) that you control.,Academic Research,5,3,2,5,No,eProsima FastDDS (Foxy default),Strongly Agree,Neutral,Agree,Strongly Disagree,NO OPINION / NOT APPLICABLE,NO OPINION / NOT APPLICABLE,Agree,Neutral,Strongly Agree,Strongly Agree,Strongly Disagree,Agree,Strongly Agree,Strongly Agree,Neutral,Strongly Agree,Strongly Agree,Strongly Agree,NO OPINION / NOT APPLICABLE,"This is a project I'm currently working on for my master's degree. A fleet of cargo robots for warehouses, that can be set with a destination in order to transport items around. The staff can request a free one to be delivered to his/her location, load it up and send it to another station. They can also be configured to follow the staff member around while being loaded.

The robots are connected to a WIFI network, and communicate with a centralized station that handles the queue of requests. Robots also communicate with each other, so path-planning can be done beforehand to avoid interlockings (think of one robot going down one aisle and the other trying to go up) and decision making (in the previous case, one of them should retreat to exit the locking)

We have complete access and control to the network infrastructure","Didn't have to change any RMW implementation. It worked out of the box, so no consideration was made to change it from the default.",Not specially.,"Cannot advocate for a particular RMW, as we only used the default one. However, we never had any trouble with it, and we prefer it that way. Should the default RMW change, we would consider configuring our solution to use the current one, as we already know it works for us.",N/A
2020/10/15 6:51:57 AM MDT,Eloquent,Multiple robots controlled by a single computer,A wireless network (802.11 a/b/g) that someone else controls,Industrial,7,2,4,5,No,eProsima FastDDS (Foxy default),Strongly Agree,Neutral,Agree,Strongly Disagree,Disagree,Agree,Agree,Neutral,Strongly Agree,Strongly Agree,Strongly Disagree,Agree,Strongly Agree,Strongly Agree,NO OPINION / NOT APPLICABLE,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Managing sensorical data on industrial plants. No privileged access to network infrastructure.,No previous ROS experience before ROS2. Middleware layer has not arisen any issues.,Speed up system startup specially on noisy Wifi.,,
2020/10/15 7:04:14 AM MDT,Foxy,Multiple robots controlled from multiple computers,A hardwired Ethernet connection,Corporate R&D,8,3,4,5,No,eProsima FastDDS (Foxy default),Strongly Agree,Strongly Agree,Neutral,Strongly Disagree,Neutral,Strongly Agree,Strongly Agree,Neutral,Strongly Agree,Strongly Agree,Strongly Disagree,Neutral,Strongly Agree,Strongly Agree,Strongly Agree,Agree,Strongly Agree,Strongly Agree,Strongly Agree,Heliostat control position on Concentrated solar power plants,ROS2 is my first approach to ROS,More information on scalability for large deployments.,,
2020/10/15 7:56:19 AM MDT,Eloquent,One robot controlled from with second remote computer as a terminal.,Inter process communication / all on a single machine;A hardwired Ethernet connection;A wireless network (802.11 a/b/g) that you control.;A wireless network (802.11 a/b/g) that someone else controls,Education,5,10,3,5,No,eProsima FastDDS (Foxy default),Strongly Agree,Agree,Strongly Agree,Agree,Neutral,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Neutral,Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Agree,I have a few robots running ROS2 on our local wifi network. Each robot is associated to a student. We have privileged root access to the network,We have been using the default configurated DDS (FastRTPS) and it worked great. So far no complains,"For me, a general user without very specific requirement, the default DDS implementation is very good. I understand that for some specific applications, another implementation may be better. It would be great if there were a way to provide an independent analysis that indicates for which specific cases one implementation is better option than the others. So far, only interested analysis have been created.","I advocate for FastDDS (formerly FastRTPS) from eProsima. I think their implementation works great for most of the situations. Also, they have a full and large team dedicated to develop and improve it. Finally, they have specialised services for companies that need extra development on top of that. And it is open source ",
2020/10/15 8:04:31 AM MDT,Foxy,One robot with multiple onboard computers,"A hardwired Ethernet connection;A wireless network (802.11 a/b/g) that you control.;Embedded communications (serial, I2C, USB, etc)",Autonomy / Vehicle,7,0.5,3,5,Yes,ADLink CycloneDDS,Strongly Agree,Strongly Agree,Agree,Strongly Agree,Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,EvGrandPrix and Indy Autonomous Challenge.  Multiple PoE devices and USB.,Moved to Cyclone DDS for better performance.,Cyclone DDS,We're using Cyclone and like it.,Thanks for the great ecosystem and support!
2020/10/15 8:36:03 AM MDT,Foxy,Multiple robots controlled by a single computer,"A wireless network (802.11 a/b/g) that you control.;A wireless network (802.11 a/b/g) that someone else controls;Embedded communications (serial, I2C, USB, etc)",Logistics / Fullfillment,8,5,5,6,No,eProsima FastDDS (Foxy default),Agree,Agree,Agree,Agree,Agree,Agree,Agree,Agree,Agree,Agree,Agree,Agree,Agree,Agree,Agree,Agree,Agree,Agree,Agree,,,,,
2020/10/15 8:44:55 AM MDT,Foxy,Multiple robots controlled by a single computer,"Embedded communications (serial, I2C, USB, etc)",Hardware Develpoment,6,2,4,5,No,eProsima FastDDS (Foxy default),Strongly Agree,Strongly Agree,Agree,Strongly Disagree,Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Disagree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,My ROS 2 main application is investigating planning and navigation algorithms for diff driver robots.,"I haven't changed the default RMW, works ok for my application.","Ok with the supported middlware features, mostly used services and actions and good documentation is provided.",Default RMW middleware is open source and ok for my use cases.,"Nothing, all fine."
2020/10/15 11:02:57 AM MDT,Foxy,One robot with multiple onboard computers,Inter process communication / all on a single machine;PCIE,Autonomy / Vehicle,5,3,2,4,Yes,ADLink CycloneDDS,Strongly Disagree,Neutral,Agree,Agree,Strongly Disagree,Neutral,Disagree,Strongly Disagree,Agree,Strongly Disagree,Agree,Strongly Disagree,Neutral,Neutral,NO OPINION / NOT APPLICABLE,Disagree,Neutral,Strongly Disagree,NO OPINION / NOT APPLICABLE,Embedded Device connected over PCIE NTB netdev to a PC used to transport high resolution images,DDS performance is not sufficient and a custom bridge between PC/Embedded device is used.,,,
2020/10/15 12:53:33 PM MDT,Foxy,One robot powered with a single computer,Inter process communication / all on a single machine,Autonomy / Vehicle,9,3,4,6,Yes,ADLink CycloneDDS,Strongly Agree,Agree,Strongly Agree,Strongly Agree,Neutral,Strongly Agree,Neutral,Neutral,Strongly Agree,Strongly Agree,Neutral,Neutral,Strongly Agree,Strongly Agree,Neutral,Disagree,Neutral,Neutral,Neutral,I develop a database and make it available via ROS2 message passing. I have privileged access to network infrastructure.,"While I worked with AWS Robomaker, I actively tested the overhead and reliability of a few ROS2 RMW implementations last year after discovering a few bugs and performance problems in FastRTPS. As of one year ago, I had a fair bit of trouble getting FastRTPS working reliably. I could reliably reproduce seg faults and deadlocks, and my reported issues stayed open for over a year. I tested a few other implementations and found that CycloneDDS had by far the best performance and reliability, though at the time it had limited support for ROS2. I've used CycloneDDS whenever possible since then.","If it doesn't exist yet, I'd just like to know what perfomance and reliability benchmarks any given RMW implementation is hitting. As of two years ago, I wasn't aware of any of that existing. The information would have been extremely useful.","This is still going off of information from one year ago, but I'd strongly advocate for CycloneDDS over FastRTPS if they've managed to improve ROS2 support. My experience with CycloneDDS has been favorable. I can't say the same about FastRTPS.",
2020/10/15 10:18:08 PM MDT,Foxy,Multiple robots controlled by a single computer,Inter process communication / all on a single machine;A hardwired Ethernet connection,Autonomy / Vehicle,8,5,4,6,No,ADLink CycloneDDS,Agree,Agree,Agree,Agree,Agree,Agree,Agree,Agree,Agree,Agree,Agree,Agree,Agree,Agree,Agree,Agree,Agree,Agree,Agree,,,,,
2020/10/15 11:14:32 PM MDT,Rolling,One robot with multiple onboard computers,"A hardwired Ethernet connection;4G LTE / 5G  / Telecom;Embedded communications (serial, I2C, USB, etc)",Autonomy / Vehicle,5,3,2,5,No,eProsima FastDDS (Foxy default),Agree,Agree,Neutral,Neutral,Neutral,Agree,Agree,Agree,Agree,Agree,Agree,Agree,Agree,Agree,Agree,Agree,Agree,Disagree,Neutral,Main computer is a server with various display computers attached via a switch or onboard WiFi. Server computer is connected to 4G.,Used open splice 4 years ago. It was too buggy. Used a custom middleware for a couple of years. Used Apollo's cyber for while. Apollo's cyber uses Fast-DDS.,"running more tests, moving to bazel, using dynamic analysis, support intraprocess, and support interprocess communications.",I like that Fast-DDS responds to the community on GitHub.,Make smaller changes across ROS versions in the future. It's silly that there is both ROS 1 and ROS 2 right now.
2020/10/15 11:37:45 PM MDT,Foxy,One robot controlled from with second remote computer as a terminal.,Inter process communication / all on a single machine;A hardwired Ethernet connection;A wireless network (802.11 a/b/g) that you control.;A wireless network (802.11 a/b/g) that someone else controls,Education,6,2,2,3,No,eProsima FastDDS (Foxy default),Strongly Agree,Disagree,Strongly Agree,Strongly Disagree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Disagree,Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,"The basic applications I implement are based on robots with self-contained publishers and subscribers, which are controlled and monitored through an external machine. The network is a university network so I do not have access to its configuration.",I started with the ROS 2 tutorials and have not had any problems with the default RMW implementation. ,Maybe including more advanced tutorials.,I think eProsima FastDDS should be the default implementation because of all the features it provides.,
2020/10/15 11:45:30 PM MDT,Foxy,Multiple robots controlled by a single computer,Inter process communication / all on a single machine;A hardwired Ethernet connection;A wireless network (802.11 a/b/g) that you control.;A wireless network (802.11 a/b/g) that someone else controls,Academic Research,7,3,3,5,No,eProsima FastDDS (Foxy default),Strongly Agree,Neutral,Agree,Disagree,Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Disagree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,"I have a multi-robot system with ROS 2 Foxy. These are synchronised with each other, as well as with sensors and actuators in a room. The system is quite complex so the traffic on the network is excessive. That's why I use FastDDS' Discovery Server to reduce this traffic with the out-of-the-box configuration.",I have never had to change the default implementation.,It is enough with what there is.,eProsima FastDDS as it has the Discovery Service based on a client-server architecture.,
2020/10/16 12:46:59 AM MDT,Foxy,Multiple robots controlled from multiple computers,4G LTE / 5G  / Telecom,Corporate R&D,9,2,3,5,No,eProsima FastDDS (Foxy default),Agree,Agree,Agree,Neutral,Disagree,Disagree,Strongly Agree,Agree,Disagree,Neutral,Neutral,Agree,Agree,Agree,NO OPINION / NOT APPLICABLE,Agree,Agree,Strongly Disagree,NO OPINION / NOT APPLICABLE,Distributed localization and mapping application executing on NVIDIA Jetson HW platforms connected over Ethernet and 4G/5G networks. Have root access to network infrastructure. ,Default (Fast-DDS) worked well. ,"RMW implementations should enable convenient configuration of QoS settings of publishers and subscribers in ROS2 applications. As of today, they do not have fine-grained interfaces to configure QoS for *select few* publishers/subscribers. More comprehensive documentation with examples of QoS configuration will help. Tools that indicate incompatible request-offer QoS settings and suggest compatible alternatives will help improve developer productivity. It would be excellent if the default RMW vendor has a reputation of offering prompt support in the ROS Answers site.",eProsima Fast-DDS is a good choice because it is open-source. Users can study its construction and modify it to suit their needs. eProsima vendors are usually quick in addressing issues on their Github site. ,"I request the TSC to introduce support in ROS2 for network QoS configuration. It seems like there is a general resistance and ignorance of network configuration. However, the robotics-focused networks such as 5G are built on the idea that applications will explicitly configure the required QoS. Performance potential of applications is degraded and networking investments are wasted due to lack of network configuration enablers in ROS2."
2020/10/16 6:13:50 AM MDT,Dashing,"1 or several unmanned vehicules, multiple computers onboard and a remote terminal:",A hardwired Ethernet connection;A wireless network (802.11 a/b/g) that you control.,unmanned vehicules in defence r&d,8,2,4,6,No,eProsima FastDDS (Foxy default),Agree,Agree,Neutral,Strongly Disagree,Agree,Agree,Agree,Agree,Agree,Agree,Disagree,Strongly Agree,Strongly Agree,Strongly Agree,Agree,Agree,Agree,Agree,Agree,"unmanned vehicules , ethernet on board, wifi and other with remote terminal or other vehicules","I require the default rmw to contratists, need for full compatibility with all proyects","full compatibility, easy configuration","eprosima , it works as it shoud, and we have locally the developers and support company",no
2020/10/16 6:49:34 AM MDT,Foxy,One robot with multiple onboard computers,"Inter process communication / all on a single machine;A wireless network (802.11 a/b/g) that you control.;Embedded communications (serial, I2C, USB, etc)",Autonomy / Vehicle,10,2,3,4,No,ADLink CycloneDDS,Agree,Agree,Neutral,Strongly Agree,Neutral,Agree,Agree,Agree,Agree,Agree,Neutral,Agree,Strongly Agree,Agree,Agree,Neutral,Agree,Agree,Agree,Autonomous caled vehicle,,,,
2020/10/16 7:30:27 AM MDT,Foxy,Multiple robots controlled from multiple computers,"Inter process communication / all on a single machine;A hardwired Ethernet connection;A wireless network (802.11 a/b/g) that you control.;A wireless network (802.11 a/b/g) that someone else controls;Embedded communications (serial, I2C, USB, etc)",Logistics / Fullfillment,8,4,3,6,Yes,ADLink CycloneDDS,Agree,Agree,Strongly Agree,Disagree,Strongly Disagree,Neutral,Disagree,Disagree,Agree,Neutral,Disagree,Agree,Agree,Agree,NO OPINION / NOT APPLICABLE,Neutral,Strongly Agree,Neutral,Disagree,Our AMR robots will be deployed in warehouses to do logistics. Each robot is connected to a WiFi AP to connect to a cloud for diagnostics and application level control and management. In the cloud we will run a website which aggregates ROS2 information from warehouses of multiple clients. We have full control over the network setup on the cloud and clients side and run a VPN between cloud and clients sites to enable ROS2 multicast to the cloud.,"Our requirements are real time robot operation on the robot, reliable message transfer to the cloud and back and security over all topics.

We first tested everything with Fast DDS and SROS but found that in a multi system setup with many nodes on each system we had some trouble in discovering nodes. Therefore we switched to CycloneDDS and saw that we had less issues with it. Except for SROS which we haven't been able to make work.","The documentation is lacking in many places. From the start where you have to pick and decide on which RMW implementation to use up-to how we can configure/optimize each implementation.

Having documentation on multi system setups with configuration options (and why) would be a big improvement.","CycloneDDS has been more consistent with outputting the expected performance. The test we ran show that in many different scenarios CycloneDDS is able to work without a hitch, while Fast DDS's performance outperforms CycloneDDS in some scenarios it completely fails in others (100+ nodes in a distributed setup over VPN).",
2020/10/16 8:08:54 AM MDT,Foxy,One robot powered with a single computer,Inter process communication / all on a single machine;A hardwired Ethernet connection,Autonomy / Vehicle,9,2.5,4,5,Yes,RTI Connext,Agree,Agree,Strongly Agree,Agree,Neutral,Neutral,Neutral,Agree,Agree,Neutral,Agree,Agree,Disagree,Agree,Agree,Agree,Strongly Agree,Agree,Neutral,,"I mostly used RTI Connext due to a decision beyond my influence. Overall it's a pretty solid solution with some very useful debugging tools. However, licensing seems to be a huge problem in terms of wider adoption. In addition, I noticed very inconsistent behavior with of RTI's codegen feature (in 5.3.1, the only version officially supported in ROS 2).",,"I would advocate for Cyclone DDS. It's an open-source and very performant solution widely adopted by the autonomous driving community. Documentation is still it's early stages, but I received very good support when trying to solve any problems I had.",
2020/10/16 9:22:54 AM MDT,Foxy,One robot with multiple onboard computers,Inter process communication / all on a single machine;A hardwired Ethernet connection,Autonomy / Vehicle,2,10,4,4,Yes,ADLink CycloneDDS,Strongly Agree,Agree,Strongly Agree,Strongly Agree,Agree,Strongly Agree,Strongly Agree,NO OPINION / NOT APPLICABLE,Agree,Strongly Agree,Strongly Disagree,Strongly Agree,Strongly Agree,Strongly Agree,NO OPINION / NOT APPLICABLE,Agree,Strongly Agree,Strongly Agree,Strongly Agree,Primarily single robot with multiple onboard computers communicating via ethernet. Also some applications where the single robot communicates with outside machines via wifi.,We use cyclonedds for its performance and the really outstanding engineering support they have.,"There are many times we think that ROS 2 should not have tried to abstract out the middleware... the abstraction adds a lot of complexity and overhead as well as obscuring some features of the actual middleware being used. We understand why an abstraction was done, but, in an open source project with very limited resources, I think I would prefer simplicity and maintainability over generality.","I would definitely advocate for a default RMW (and even further for only a single supported RMW). As for which one, I don't have a strong opinion, but I would be biased to cyclonedds simply because they seem extremely willing to engage with the community and to be responsive to its needs.",
2020/10/16 9:41:58 AM MDT,Foxy,One robot controlled from with second remote computer as a terminal.,Inter process communication / all on a single machine;A hardwired Ethernet connection;A wireless network (802.11 a/b/g) that you control.;A wireless network (802.11 a/b/g) that someone else controls,Education,5,2,2,3,No,eProsima FastDDS (Foxy default),Strongly Agree,Neutral,Neutral,Strongly Disagree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Disagree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,"At university I worked with ROS 2 for the implementation of ecosystem simulators with robots. It used several bash sessions to simulate the behaviour of the real robot so communication was local at all times, within the same machine but in different processes.",I have never had to make any changes to the ROS RMW.,,I would recommend the current default implementation as I have never had any problems or need to change it.,
2020/10/16 9:48:36 AM MDT,Dashing,One robot powered with a single computer,Inter process communication / all on a single machine,Corporate R&D,3,2,3,3,Yes,ADLink CycloneDDS,Agree,Agree,Agree,Agree,Strongly Disagree,Agree,Disagree,NO OPINION / NOT APPLICABLE,Agree,Agree,Agree,Agree,Agree,Agree,Agree,NO OPINION / NOT APPLICABLE,Agree,Neutral,NO OPINION / NOT APPLICABLE,My robotics applications was for corporate research. Our objective was to get the lowest possible foot print running ros on a small onboard computer comparable to a Raspberry Pi 3. We explored the possibility of using only Intra-Process communication while not changing the rest of the application which assumed DDS based comms. We did not have root access to network infrastructure. ,"We started with the default RMW and found it to be too resource heavy to be suitable for our application. We therefore had to compare several DDS implementations including CycloneDDS, Intel DPS etc. The process was painful as these implementations were not ready for build & install (some did not support colcon etc). Once installed we had to write our own profiling tools as no good options were available from Open Robotics. There were no benchmarks to compare against and so we had to do most of the work there as well. ",Supporting a more out-of-box experience especially with more type of RMW vendors would be good. Guidance to users on which RMW is better suited for their application would be good to have. Pushing RMW vendors to bundle in easy to setup debugging / connection / profiling tools would be good to have. Overall documentation around the types of RMWs and their strengths / weakness would make the selection even more easy. ,Performance wise Cyclone DDS was better than FastRTPS in 2019. I am not sure if the trend has continued. ,
2020/10/16 12:17:24 PM MDT,Eloquent,One robot controlled from with second remote computer as a terminal.,A hardwired Ethernet connection;A wireless network (802.11 a/b/g) that you control.,Autonomy / Vehicle,7,4,3,5,No,eProsima FastDDS (Foxy default),Disagree,Neutral,Disagree,Disagree,Disagree,Agree,Agree,Neutral,Agree,Agree,Strongly Disagree,Strongly Agree,Neutral,Neutral,Agree,Agree,Strongly Agree,Agree,Agree,Control of an off-road vehicle in a secured environment. The main control computer is wired to a router to which different sensors for the robot connect to. A second computer connects to the same router via Wi-Fi to provide a GUI and terminal for the user.,"We use the default. We had some issues initially because the main computer run on QNX, while the display computer runs on Linux. But with some support from eProsima we manage to get our two computers talking. It wasn't working out of the box, but it was a solvable issue.",,,
2020/10/16 7:41:37 PM MDT,Dashing,One robot with multiple onboard computers,Inter process communication / all on a single machine;A hardwired Ethernet connection,Autonomy / Vehicle,8,12,5,5,Yes,ADLink CycloneDDS,Disagree,Strongly Agree,Strongly Agree,Disagree,Disagree,Neutral,Disagree,Disagree,Disagree,Disagree,Strongly Disagree,Neutral,Strongly Disagree,Neutral,Neutral,Agree,Strongly Agree,Disagree,Neutral,"The application is an autonomous car. The car, in most complicated case, includes up to 5 computers that are connected via Ethernet and use DDS for inter and intra computer communication.","1. Started with rmw_fastrtps, invested several $100K into it to make it performant & real-time and eProsima never got there
2. We created our own RMW (rmw_apex_dds) based on Connext DDS Micro which works great for our use case but it is a) too expansive and b) it is missing a few important features
3. Now we are looking at rmw_cyclonedds via Autoware.Auto & rmw_iceoryx
 ","I think that we need:
1. One commercial DDS implementation => RTI checks off this box
2. One open source DDS implementation => everyone should contribute to CycloneDDS and rmw_cyclonedds and make it really solid. This DDS implementation is best suitable to be the ""one"" because a) it has the best architect in Erik B and b) because it has the best architecture design.",I would advocate for eProsima team to join forces with ADLINK and contribute to CycloneDDS.,"I'll just repeat the statement from above:

Everyone should contribute to CycloneDDS and rmw_cyclonedds and make it really solid. This DDS implementation is best suitable to be the ""one"" because a) it has the best architect in Erik B and b) because it has the best architecture design."
2020/10/17 10:14:49 AM MDT,Foxy,Multiple robots controlled from multiple computers,A wireless network (802.11 a/b/g) that you control.,Autonomy / Vehicle,8,10,4,5,No,eProsima FastDDS (Foxy default),Strongly Agree,Agree,Agree,Disagree,Agree,Agree,Agree,Agree,Agree,Agree,Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Strongly Agree,Service robotics,,,,
